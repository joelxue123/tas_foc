ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB22:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Not used in this path. */
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 37


2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  27              		.loc 1 2050 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  33              		.loc 1 2059 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  36              		.loc 1 2061 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F10700 		rsb	r0, r0, #7
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2065 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 38


  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  48              		.loc 1 2069 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE22:
  53              		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	prvIsQueueFull:
  61              	.LFB28:
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2332 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 43


  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2335 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2337 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 04D0     		beq	.L8
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  81              		.loc 1 2343 0
  82 0010 0024     		movs	r4, #0
  83              	.LVL7:
  84              	.L5:
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  85              		.loc 1 2346 0
  86 0012 FFF7FEFF 		bl	vPortExitCritical
  87              	.LVL8:
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  88              		.loc 1 2349 0
  89 0016 2046     		mov	r0, r4
  90 0018 10BD     		pop	{r4, pc}
  91              	.LVL9:
  92              	.L8:
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  93              		.loc 1 2339 0
  94 001a 0124     		movs	r4, #1
  95              	.LVL10:
  96 001c F9E7     		b	.L5
  97              		.cfi_endproc
  98              	.LFE28:
 100              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 44


 107              	prvIsQueueEmpty:
 108              	.LFB26:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 109              		.loc 1 2292 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL11:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 120              		.loc 1 2295 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL12:
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 123              		.loc 1 2297 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 23B1     		cbz	r3, .L13
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 126              		.loc 1 2303 0
 127 000c 0024     		movs	r4, #0
 128              	.LVL13:
 129              	.L10:
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 130              		.loc 1 2306 0
 131 000e FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL14:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2309 0
 134 0012 2046     		mov	r0, r4
 135 0014 10BD     		pop	{r4, pc}
 136              	.LVL15:
 137              	.L13:
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 138              		.loc 1 2299 0
 139 0016 0124     		movs	r4, #1
 140              	.LVL16:
 141 0018 F9E7     		b	.L10
 142              		.cfi_endproc
 143              	.LFE26:
 145              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	prvCopyDataToQueue:
 153              	.LFB23:
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 154              		.loc 1 2075 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 45


 158              	.LVL17:
 159 0000 70B5     		push	{r4, r5, r6, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0446     		mov	r4, r0
 167 0004 1646     		mov	r6, r2
 168              	.LVL18:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 169              		.loc 1 2081 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL19:
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 172              		.loc 1 2083 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL20:
 175 000a 5AB9     		cbnz	r2, .L15
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 176              		.loc 1 2087 0
 177 000c 0368     		ldr	r3, [r0]
 178 000e 1BB1     		cbz	r3, .L24
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 179              		.loc 1 2076 0
 180 0010 0020     		movs	r0, #0
 181              	.LVL21:
 182              	.L16:
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183              		.loc 1 2147 0
 184 0012 0135     		adds	r5, r5, #1
 185              	.LVL22:
 186 0014 A563     		str	r5, [r4, #56]
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 187              		.loc 1 2150 0
 188 0016 70BD     		pop	{r4, r5, r6, pc}
 189              	.LVL23:
 190              	.L24:
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 191              		.loc 1 2090 0
 192 0018 8068     		ldr	r0, [r0, #8]
 193              	.LVL24:
 194 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 195              	.LVL25:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 196              		.loc 1 2091 0
 197 001e 0023     		movs	r3, #0
 198 0020 A360     		str	r3, [r4, #8]
 199 0022 F6E7     		b	.L16
 200              	.LVL26:
 201              	.L15:
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 202              		.loc 1 2100 0
 203 0024 6EB9     		cbnz	r6, .L17
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 204              		.loc 1 2102 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 46


 205 0026 4068     		ldr	r0, [r0, #4]
 206              	.LVL27:
 207 0028 FFF7FEFF 		bl	memcpy
 208              	.LVL28:
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 209              		.loc 1 2103 0
 210 002c 226C     		ldr	r2, [r4, #64]
 211 002e 6368     		ldr	r3, [r4, #4]
 212 0030 1344     		add	r3, r3, r2
 213 0032 6360     		str	r3, [r4, #4]
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 214              		.loc 1 2104 0
 215 0034 A268     		ldr	r2, [r4, #8]
 216 0036 9342     		cmp	r3, r2
 217 0038 19D3     		bcc	.L20
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 218              		.loc 1 2106 0
 219 003a 2368     		ldr	r3, [r4]
 220 003c 6360     		str	r3, [r4, #4]
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 221              		.loc 1 2076 0
 222 003e 0020     		movs	r0, #0
 223 0040 E7E7     		b	.L16
 224              	.LVL29:
 225              	.L17:
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 226              		.loc 1 2115 0
 227 0042 C068     		ldr	r0, [r0, #12]
 228              	.LVL30:
 229 0044 FFF7FEFF 		bl	memcpy
 230              	.LVL31:
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 231              		.loc 1 2116 0
 232 0048 226C     		ldr	r2, [r4, #64]
 233 004a 5242     		negs	r2, r2
 234 004c E368     		ldr	r3, [r4, #12]
 235 004e 1344     		add	r3, r3, r2
 236 0050 E360     		str	r3, [r4, #12]
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 237              		.loc 1 2117 0
 238 0052 2168     		ldr	r1, [r4]
 239 0054 8B42     		cmp	r3, r1
 240 0056 02D2     		bcs	.L18
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 241              		.loc 1 2119 0
 242 0058 A368     		ldr	r3, [r4, #8]
 243 005a 1A44     		add	r2, r2, r3
 244 005c E260     		str	r2, [r4, #12]
 245              	.L18:
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 246              		.loc 1 2126 0
 247 005e 022E     		cmp	r6, #2
 248 0060 01D0     		beq	.L25
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 249              		.loc 1 2076 0
 250 0062 0020     		movs	r0, #0
 251 0064 D5E7     		b	.L16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 47


 252              	.L25:
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 253              		.loc 1 2128 0
 254 0066 25B1     		cbz	r5, .L22
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 255              		.loc 1 2134 0
 256 0068 013D     		subs	r5, r5, #1
 257              	.LVL32:
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 258              		.loc 1 2076 0
 259 006a 0020     		movs	r0, #0
 260 006c D1E7     		b	.L16
 261              	.L20:
 262 006e 0020     		movs	r0, #0
 263 0070 CFE7     		b	.L16
 264              	.L22:
 265 0072 0020     		movs	r0, #0
 266 0074 CDE7     		b	.L16
 267              		.cfi_endproc
 268              	.LFE23:
 270              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	prvCopyDataFromQueue:
 278              	.LFB24:
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 279              		.loc 1 2154 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL33:
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 284              		.loc 1 2155 0
 285 0000 026C     		ldr	r2, [r0, #64]
 286 0002 72B1     		cbz	r2, .L30
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 287              		.loc 1 2154 0
 288 0004 10B5     		push	{r4, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 293              		.loc 1 2157 0
 294 0006 C368     		ldr	r3, [r0, #12]
 295 0008 1344     		add	r3, r3, r2
 296 000a C360     		str	r3, [r0, #12]
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 297              		.loc 1 2158 0
 298 000c 8468     		ldr	r4, [r0, #8]
 299 000e A342     		cmp	r3, r4
 300 0010 01D3     		bcc	.L28
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 301              		.loc 1 2160 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 48


 302 0012 0368     		ldr	r3, [r0]
 303 0014 C360     		str	r3, [r0, #12]
 304              	.L28:
 305 0016 0C46     		mov	r4, r1
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 306              		.loc 1 2166 0
 307 0018 C168     		ldr	r1, [r0, #12]
 308              	.LVL34:
 309 001a 2046     		mov	r0, r4
 310              	.LVL35:
 311 001c FFF7FEFF 		bl	memcpy
 312              	.LVL36:
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 313              		.loc 1 2168 0
 314 0020 10BD     		pop	{r4, pc}
 315              	.LVL37:
 316              	.L30:
 317              	.LCFI4:
 318              		.cfi_def_cfa_offset 0
 319              		.cfi_restore 4
 320              		.cfi_restore 14
 321 0022 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE24:
 325              		.section	.text.prvUnlockQueue,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	prvUnlockQueue:
 333              	.LFB25:
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 334              		.loc 1 2172 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL38:
 339 0000 38B5     		push	{r3, r4, r5, lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 3, -16
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
 346 0002 0546     		mov	r5, r0
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 347              		.loc 1 2179 0
 348 0004 FFF7FEFF 		bl	vPortEnterCritical
 349              	.LVL39:
 350              	.LBB102:
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 351              		.loc 1 2181 0
 352 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 353 000c 64B2     		sxtb	r4, r4
 354              	.LVL40:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 49


 355              		.loc 1 2184 0
 356 000e 03E0     		b	.L34
 357              	.L43:
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 358              		.loc 1 2238 0
 359 0010 FFF7FEFF 		bl	vTaskMissedYield
 360              	.LVL41:
 361              	.L36:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 362              		.loc 1 2252 0
 363 0014 013C     		subs	r4, r4, #1
 364              	.LVL42:
 365 0016 64B2     		sxtb	r4, r4
 366              	.LVL43:
 367              	.L34:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368              		.loc 1 2184 0
 369 0018 002C     		cmp	r4, #0
 370 001a 08DD     		ble	.L35
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 371              		.loc 1 2232 0
 372 001c 6B6A     		ldr	r3, [r5, #36]
 373 001e 33B1     		cbz	r3, .L35
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 374              		.loc 1 2234 0
 375 0020 05F12400 		add	r0, r5, #36
 376 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 377              	.LVL44:
 378 0028 0028     		cmp	r0, #0
 379 002a F3D0     		beq	.L36
 380 002c F0E7     		b	.L43
 381              	.L35:
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 382              		.loc 1 2255 0
 383 002e FF23     		movs	r3, #255
 384 0030 85F84530 		strb	r3, [r5, #69]
 385              	.LBE102:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386              		.loc 1 2257 0
 387 0034 FFF7FEFF 		bl	vPortExitCritical
 388              	.LVL45:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 389              		.loc 1 2260 0
 390 0038 FFF7FEFF 		bl	vPortEnterCritical
 391              	.LVL46:
 392              	.LBB103:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 393              		.loc 1 2262 0
 394 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 395              	.LVL47:
 396 0040 64B2     		sxtb	r4, r4
 397              	.LVL48:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 398              		.loc 1 2264 0
 399 0042 03E0     		b	.L38
 400              	.L44:
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 50


 401              		.loc 1 2270 0
 402 0044 FFF7FEFF 		bl	vTaskMissedYield
 403              	.LVL49:
 404              	.L40:
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 405              		.loc 1 2277 0
 406 0048 013C     		subs	r4, r4, #1
 407              	.LVL50:
 408 004a 64B2     		sxtb	r4, r4
 409              	.LVL51:
 410              	.L38:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 411              		.loc 1 2264 0
 412 004c 002C     		cmp	r4, #0
 413 004e 08DD     		ble	.L39
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 414              		.loc 1 2266 0
 415 0050 2B69     		ldr	r3, [r5, #16]
 416 0052 33B1     		cbz	r3, .L39
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 417              		.loc 1 2268 0
 418 0054 05F11000 		add	r0, r5, #16
 419 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 420              	.LVL52:
 421 005c 0028     		cmp	r0, #0
 422 005e F3D0     		beq	.L40
 423 0060 F0E7     		b	.L44
 424              	.L39:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 425              		.loc 1 2285 0
 426 0062 FF23     		movs	r3, #255
 427 0064 85F84430 		strb	r3, [r5, #68]
 428              	.LBE103:
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 429              		.loc 1 2287 0
 430 0068 FFF7FEFF 		bl	vPortExitCritical
 431              	.LVL53:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 432              		.loc 1 2288 0
 433 006c 38BD     		pop	{r3, r4, r5, pc}
 434              		.cfi_endproc
 435              	.LFE25:
 437              		.section	.text.xQueueGenericReset,"ax",%progbits
 438              		.align	1
 439              		.global	xQueueGenericReset
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	xQueueGenericReset:
 446              	.LFB5:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 447              		.loc 1 256 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL54:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 51


 452 0000 38B5     		push	{r3, r4, r5, lr}
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 3, -16
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459              	.LVL55:
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460              		.loc 1 259 0
 461 0002 40B9     		cbnz	r0, .L46
 462              	.LBB104:
 463              	.LBB105:
 464              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 52


  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 53


 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 54


 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 465              		.loc 2 195 0
 466              		.syntax unified
 467              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 468 0004 4FF05003 			mov r3, #80												
 469 0008 83F31188 		msr basepri, r3											
 470 000c BFF36F8F 		isb														
 471 0010 BFF34F8F 		dsb														
 472              	
 473              	@ 0 "" 2
 474              	.LVL56:
 475              		.thumb
 476              		.syntax unified
 477              	.L47:
 478 0014 FEE7     		b	.L47
 479              	.L46:
 480 0016 0446     		mov	r4, r0
 481 0018 0D46     		mov	r5, r1
 482              	.LBE105:
 483              	.LBE104:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 55


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484              		.loc 1 261 0
 485 001a FFF7FEFF 		bl	vPortEnterCritical
 486              	.LVL57:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 487              		.loc 1 263 0
 488 001e 2168     		ldr	r1, [r4]
 489 0020 E26B     		ldr	r2, [r4, #60]
 490 0022 236C     		ldr	r3, [r4, #64]
 491 0024 03FB0210 		mla	r0, r3, r2, r1
 492 0028 A060     		str	r0, [r4, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 493              		.loc 1 264 0
 494 002a 0020     		movs	r0, #0
 495 002c A063     		str	r0, [r4, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 496              		.loc 1 265 0
 497 002e 6160     		str	r1, [r4, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 498              		.loc 1 266 0
 499 0030 013A     		subs	r2, r2, #1
 500 0032 02FB0313 		mla	r3, r2, r3, r1
 501 0036 E360     		str	r3, [r4, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 502              		.loc 1 267 0
 503 0038 FF23     		movs	r3, #255
 504 003a 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 505              		.loc 1 268 0
 506 003e 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 507              		.loc 1 270 0
 508 0042 A5B9     		cbnz	r5, .L48
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 509              		.loc 1 277 0
 510 0044 2369     		ldr	r3, [r4, #16]
 511 0046 1BB9     		cbnz	r3, .L51
 512              	.L49:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513              		.loc 1 300 0
 514 0048 FFF7FEFF 		bl	vPortExitCritical
 515              	.LVL58:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516              		.loc 1 305 0
 517 004c 0120     		movs	r0, #1
 518 004e 38BD     		pop	{r3, r4, r5, pc}
 519              	.LVL59:
 520              	.L51:
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 521              		.loc 1 279 0
 522 0050 04F11000 		add	r0, r4, #16
 523 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 524              	.LVL60:
 525 0058 0028     		cmp	r0, #0
 526 005a F5D0     		beq	.L49
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 527              		.loc 1 281 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 56


 528 005c 084B     		ldr	r3, .L52
 529 005e 4FF08052 		mov	r2, #268435456
 530 0062 1A60     		str	r2, [r3]
 531              		.syntax unified
 532              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 533 0064 BFF34F8F 		dsb
 534              	@ 0 "" 2
 535              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 536 0068 BFF36F8F 		isb
 537              	@ 0 "" 2
 538              		.thumb
 539              		.syntax unified
 540 006c ECE7     		b	.L49
 541              	.L48:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 542              		.loc 1 296 0
 543 006e 04F11000 		add	r0, r4, #16
 544 0072 FFF7FEFF 		bl	vListInitialise
 545              	.LVL61:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 546              		.loc 1 297 0
 547 0076 04F12400 		add	r0, r4, #36
 548 007a FFF7FEFF 		bl	vListInitialise
 549              	.LVL62:
 550 007e E3E7     		b	.L49
 551              	.L53:
 552              		.align	2
 553              	.L52:
 554 0080 04ED00E0 		.word	-536810236
 555              		.cfi_endproc
 556              	.LFE5:
 558              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	prvInitialiseNewQueue:
 566              	.LFB7:
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 567              		.loc 1 423 0
 568              		.cfi_startproc
 569              		@ args = 4, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL63:
 572 0000 10B5     		push	{r4, lr}
 573              	.LCFI7:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 4, -8
 576              		.cfi_offset 14, -4
 577 0002 029B     		ldr	r3, [sp, #8]
 578              	.LVL64:
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 579              		.loc 1 428 0
 580 0004 0C46     		mov	r4, r1
 581 0006 39B9     		cbnz	r1, .L55
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 57


 582              		.loc 1 434 0
 583 0008 1B60     		str	r3, [r3]
 584              	.L56:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 585              		.loc 1 444 0
 586 000a D863     		str	r0, [r3, #60]
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 587              		.loc 1 445 0
 588 000c 1C64     		str	r4, [r3, #64]
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589              		.loc 1 446 0
 590 000e 0121     		movs	r1, #1
 591              	.LVL65:
 592 0010 1846     		mov	r0, r3
 593              	.LVL66:
 594 0012 FFF7FEFF 		bl	xQueueGenericReset
 595              	.LVL67:
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 596              		.loc 1 461 0
 597 0016 10BD     		pop	{r4, pc}
 598              	.LVL68:
 599              	.L55:
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 600              		.loc 1 439 0
 601 0018 1A60     		str	r2, [r3]
 602 001a F6E7     		b	.L56
 603              		.cfi_endproc
 604              	.LFE7:
 606              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 607              		.align	1
 608              		.global	xQueueGenericCreateStatic
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	xQueueGenericCreateStatic:
 615              	.LFB6:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 616              		.loc 1 311 0
 617              		.cfi_startproc
 618              		@ args = 4, pretend = 0, frame = 8
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL69:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621              		.loc 1 314 0
 622 0000 40B9     		cbnz	r0, .L59
 623              	.LBB106:
 624              	.LBB107:
 625              		.loc 2 195 0
 626              		.syntax unified
 627              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 628 0002 4FF05003 			mov r3, #80												
 629 0006 83F31188 		msr basepri, r3											
 630 000a BFF36F8F 		isb														
 631 000e BFF34F8F 		dsb														
 632              	
 633              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 58


 634              	.LVL70:
 635              		.thumb
 636              		.syntax unified
 637              	.L60:
 638 0012 FEE7     		b	.L60
 639              	.LVL71:
 640              	.L59:
 641              	.LBE107:
 642              	.LBE106:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 643              		.loc 1 311 0
 644 0014 10B5     		push	{r4, lr}
 645              	.LCFI8:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 4, -8
 648              		.cfi_offset 14, -4
 649 0016 84B0     		sub	sp, sp, #16
 650              	.LCFI9:
 651              		.cfi_def_cfa_offset 24
 652 0018 0446     		mov	r4, r0
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 653              		.loc 1 318 0
 654 001a 53B1     		cbz	r3, .L71
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 655              		.loc 1 322 0
 656 001c 92B1     		cbz	r2, .L63
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 657              		.loc 1 322 0 is_stmt 0 discriminator 2
 658 001e 89B9     		cbnz	r1, .L63
 659              	.LBB108:
 660              	.LBB109:
 661              		.loc 2 195 0 is_stmt 1
 662              		.syntax unified
 663              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 664 0020 4FF05003 			mov r3, #80												
 665 0024 83F31188 		msr basepri, r3											
 666 0028 BFF36F8F 		isb														
 667 002c BFF34F8F 		dsb														
 668              	
 669              	@ 0 "" 2
 670              	.LVL72:
 671              		.thumb
 672              		.syntax unified
 673              	.L64:
 674 0030 FEE7     		b	.L64
 675              	.LVL73:
 676              	.L71:
 677              	.LBE109:
 678              	.LBE108:
 679              	.LBB110:
 680              	.LBB111:
 681              		.syntax unified
 682              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 683 0032 4FF05003 			mov r3, #80												
 684 0036 83F31188 		msr basepri, r3											
 685 003a BFF36F8F 		isb														
 686 003e BFF34F8F 		dsb														
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 59


 687              	
 688              	@ 0 "" 2
 689              	.LVL74:
 690              		.thumb
 691              		.syntax unified
 692              	.L62:
 693 0042 FEE7     		b	.L62
 694              	.LVL75:
 695              	.L63:
 696              	.LBE111:
 697              	.LBE110:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 698              		.loc 1 323 0
 699 0044 4AB9     		cbnz	r2, .L65
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 700              		.loc 1 323 0 is_stmt 0 discriminator 2
 701 0046 41B1     		cbz	r1, .L65
 702              	.LBB112:
 703              	.LBB113:
 704              		.loc 2 195 0 is_stmt 1
 705              		.syntax unified
 706              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 707 0048 4FF05003 			mov r3, #80												
 708 004c 83F31188 		msr basepri, r3											
 709 0050 BFF36F8F 		isb														
 710 0054 BFF34F8F 		dsb														
 711              	
 712              	@ 0 "" 2
 713              	.LVL76:
 714              		.thumb
 715              		.syntax unified
 716              	.L66:
 717 0058 FEE7     		b	.L66
 718              	.LVL77:
 719              	.L65:
 720              	.LBE113:
 721              	.LBE112:
 722              	.LBB114:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 723              		.loc 1 330 0
 724 005a 4820     		movs	r0, #72
 725              	.LVL78:
 726 005c 0390     		str	r0, [sp, #12]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 727              		.loc 1 331 0
 728 005e 0398     		ldr	r0, [sp, #12]
 729 0060 4828     		cmp	r0, #72
 730 0062 08D0     		beq	.L67
 731              	.LBB115:
 732              	.LBB116:
 733              		.loc 2 195 0
 734              		.syntax unified
 735              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 736 0064 4FF05003 			mov r3, #80												
 737 0068 83F31188 		msr basepri, r3											
 738 006c BFF36F8F 		isb														
 739 0070 BFF34F8F 		dsb														
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 60


 740              	
 741              	@ 0 "" 2
 742              	.LVL79:
 743              		.thumb
 744              		.syntax unified
 745              	.L68:
 746 0074 FEE7     		b	.L68
 747              	.LVL80:
 748              	.L67:
 749 0076 2046     		mov	r0, r4
 750 0078 1C46     		mov	r4, r3
 751              	.LVL81:
 752              	.LBE116:
 753              	.LBE115:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 754              		.loc 1 332 0
 755 007a 039B     		ldr	r3, [sp, #12]
 756              	.LVL82:
 757              	.LBE114:
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 758              		.loc 1 352 0
 759 007c 0094     		str	r4, [sp]
 760 007e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 761 0082 FFF7FEFF 		bl	prvInitialiseNewQueue
 762              	.LVL83:
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 763              		.loc 1 361 0
 764 0086 2046     		mov	r0, r4
 765 0088 04B0     		add	sp, sp, #16
 766              	.LCFI10:
 767              		.cfi_def_cfa_offset 8
 768              		@ sp needed
 769 008a 10BD     		pop	{r4, pc}
 770              		.cfi_endproc
 771              	.LFE6:
 773              		.section	.text.xQueueGenericSend,"ax",%progbits
 774              		.align	1
 775              		.global	xQueueGenericSend
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv4-sp-d16
 781              	xQueueGenericSend:
 782              	.LFB10:
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 783              		.loc 1 741 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 16
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL84:
 788 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 789              	.LCFI11:
 790              		.cfi_def_cfa_offset 20
 791              		.cfi_offset 4, -20
 792              		.cfi_offset 5, -16
 793              		.cfi_offset 6, -12
 794              		.cfi_offset 7, -8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 61


 795              		.cfi_offset 14, -4
 796 0002 85B0     		sub	sp, sp, #20
 797              	.LCFI12:
 798              		.cfi_def_cfa_offset 40
 799 0004 0192     		str	r2, [sp, #4]
 800              	.LVL85:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801              		.loc 1 746 0
 802 0006 60B1     		cbz	r0, .L97
 803 0008 0446     		mov	r4, r0
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 804              		.loc 1 747 0
 805 000a 99B9     		cbnz	r1, .L75
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 806              		.loc 1 747 0 is_stmt 0 discriminator 2
 807 000c 026C     		ldr	r2, [r0, #64]
 808              	.LVL86:
 809 000e 8AB1     		cbz	r2, .L75
 810              	.LBB117:
 811              	.LBB118:
 812              		.loc 2 195 0 is_stmt 1
 813              		.syntax unified
 814              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 815 0010 4FF05003 			mov r3, #80												
 816 0014 83F31188 		msr basepri, r3											
 817 0018 BFF36F8F 		isb														
 818 001c BFF34F8F 		dsb														
 819              	
 820              	@ 0 "" 2
 821              	.LVL87:
 822              		.thumb
 823              		.syntax unified
 824              	.L76:
 825 0020 FEE7     		b	.L76
 826              	.LVL88:
 827              	.L97:
 828              	.LBE118:
 829              	.LBE117:
 830              	.LBB119:
 831              	.LBB120:
 832              		.syntax unified
 833              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 834 0022 4FF05003 			mov r3, #80												
 835 0026 83F31188 		msr basepri, r3											
 836 002a BFF36F8F 		isb														
 837 002e BFF34F8F 		dsb														
 838              	
 839              	@ 0 "" 2
 840              	.LVL89:
 841              		.thumb
 842              		.syntax unified
 843              	.L74:
 844 0032 FEE7     		b	.L74
 845              	.LVL90:
 846              	.L75:
 847              	.LBE120:
 848              	.LBE119:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 62


 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 849              		.loc 1 748 0
 850 0034 022B     		cmp	r3, #2
 851 0036 0BD1     		bne	.L77
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 852              		.loc 1 748 0 is_stmt 0 discriminator 2
 853 0038 E26B     		ldr	r2, [r4, #60]
 854 003a 012A     		cmp	r2, #1
 855 003c 08D0     		beq	.L77
 856              	.LBB121:
 857              	.LBB122:
 858              		.loc 2 195 0 is_stmt 1
 859              		.syntax unified
 860              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 861 003e 4FF05003 			mov r3, #80												
 862 0042 83F31188 		msr basepri, r3											
 863 0046 BFF36F8F 		isb														
 864 004a BFF34F8F 		dsb														
 865              	
 866              	@ 0 "" 2
 867              	.LVL91:
 868              		.thumb
 869              		.syntax unified
 870              	.L78:
 871 004e FEE7     		b	.L78
 872              	.LVL92:
 873              	.L77:
 874 0050 1E46     		mov	r6, r3
 875 0052 0F46     		mov	r7, r1
 876              	.LBE122:
 877              	.LBE121:
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 878              		.loc 1 751 0
 879 0054 FFF7FEFF 		bl	xTaskGetSchedulerState
 880              	.LVL93:
 881 0058 50B9     		cbnz	r0, .L94
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 882              		.loc 1 751 0 is_stmt 0 discriminator 2
 883 005a 019B     		ldr	r3, [sp, #4]
 884 005c 53B1     		cbz	r3, .L95
 885              	.LBB123:
 886              	.LBB124:
 887              		.loc 2 195 0 is_stmt 1
 888              		.syntax unified
 889              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 890 005e 4FF05003 			mov r3, #80												
 891 0062 83F31188 		msr basepri, r3											
 892 0066 BFF36F8F 		isb														
 893 006a BFF34F8F 		dsb														
 894              	
 895              	@ 0 "" 2
 896              	.LVL94:
 897              		.thumb
 898              		.syntax unified
 899              	.L80:
 900 006e FEE7     		b	.L80
 901              	.L94:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 63


 902              	.LBE124:
 903              	.LBE123:
 904 0070 0025     		movs	r5, #0
 905 0072 3AE0     		b	.L81
 906              	.L95:
 907 0074 0025     		movs	r5, #0
 908 0076 38E0     		b	.L81
 909              	.LVL95:
 910              	.L82:
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 911              		.loc 1 833 0
 912 0078 3246     		mov	r2, r6
 913 007a 3946     		mov	r1, r7
 914 007c 2046     		mov	r0, r4
 915 007e FFF7FEFF 		bl	prvCopyDataToQueue
 916              	.LVL96:
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 917              		.loc 1 837 0
 918 0082 636A     		ldr	r3, [r4, #36]
 919 0084 4BB9     		cbnz	r3, .L98
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 920              		.loc 1 852 0
 921 0086 A8B1     		cbz	r0, .L85
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 922              		.loc 1 858 0
 923 0088 3B4B     		ldr	r3, .L103
 924 008a 4FF08052 		mov	r2, #268435456
 925 008e 1A60     		str	r2, [r3]
 926              		.syntax unified
 927              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 928 0090 BFF34F8F 		dsb
 929              	@ 0 "" 2
 930              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 931 0094 BFF36F8F 		isb
 932              	@ 0 "" 2
 933              		.thumb
 934              		.syntax unified
 935 0098 0CE0     		b	.L85
 936              	.L98:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 937              		.loc 1 839 0
 938 009a 04F12400 		add	r0, r4, #36
 939              	.LVL97:
 940 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 941              	.LVL98:
 942 00a2 38B1     		cbz	r0, .L85
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 943              		.loc 1 845 0
 944 00a4 344B     		ldr	r3, .L103
 945 00a6 4FF08052 		mov	r2, #268435456
 946 00aa 1A60     		str	r2, [r3]
 947              		.syntax unified
 948              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 949 00ac BFF34F8F 		dsb
 950              	@ 0 "" 2
 951              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 952 00b0 BFF36F8F 		isb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 64


 953              	@ 0 "" 2
 954              		.thumb
 955              		.syntax unified
 956              	.L85:
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 957              		.loc 1 867 0
 958 00b4 FFF7FEFF 		bl	vPortExitCritical
 959              	.LVL99:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 960              		.loc 1 868 0
 961 00b8 0120     		movs	r0, #1
 962              	.L72:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 963              		.loc 1 947 0
 964 00ba 05B0     		add	sp, sp, #20
 965              	.LCFI13:
 966              		.cfi_remember_state
 967              		.cfi_def_cfa_offset 20
 968              		@ sp needed
 969 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 970              	.LVL100:
 971              	.L99:
 972              	.LCFI14:
 973              		.cfi_restore_state
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 974              		.loc 1 876 0
 975 00be FFF7FEFF 		bl	vPortExitCritical
 976              	.LVL101:
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 977              		.loc 1 881 0
 978 00c2 0020     		movs	r0, #0
 979 00c4 F9E7     		b	.L72
 980              	.L100:
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 981              		.loc 1 887 0
 982 00c6 02A8     		add	r0, sp, #8
 983 00c8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 984              	.LVL102:
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 985              		.loc 1 888 0
 986 00cc 0125     		movs	r5, #1
 987 00ce 19E0     		b	.L88
 988              	.LVL103:
 989              	.L101:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990              		.loc 1 903 0 discriminator 1
 991 00d0 0023     		movs	r3, #0
 992 00d2 84F84430 		strb	r3, [r4, #68]
 993 00d6 21E0     		b	.L89
 994              	.L102:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 995              		.loc 1 903 0 is_stmt 0 discriminator 4
 996 00d8 0023     		movs	r3, #0
 997 00da 84F84530 		strb	r3, [r4, #69]
 998 00de 23E0     		b	.L90
 999              	.L92:
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 65


 1000              		.loc 1 933 0 is_stmt 1
 1001 00e0 2046     		mov	r0, r4
 1002 00e2 FFF7FEFF 		bl	prvUnlockQueue
 1003              	.LVL104:
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1004              		.loc 1 934 0
 1005 00e6 FFF7FEFF 		bl	xTaskResumeAll
 1006              	.LVL105:
 1007              	.L81:
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1008              		.loc 1 761 0
 1009 00ea FFF7FEFF 		bl	vPortEnterCritical
 1010              	.LVL106:
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1011              		.loc 1 767 0
 1012 00ee A26B     		ldr	r2, [r4, #56]
 1013 00f0 E36B     		ldr	r3, [r4, #60]
 1014 00f2 9A42     		cmp	r2, r3
 1015 00f4 C0D3     		bcc	.L82
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1016              		.loc 1 767 0 is_stmt 0 discriminator 1
 1017 00f6 022E     		cmp	r6, #2
 1018 00f8 BED0     		beq	.L82
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1019              		.loc 1 872 0 is_stmt 1
 1020 00fa 019B     		ldr	r3, [sp, #4]
 1021 00fc 002B     		cmp	r3, #0
 1022 00fe DED0     		beq	.L99
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1023              		.loc 1 883 0
 1024 0100 002D     		cmp	r5, #0
 1025 0102 E0D0     		beq	.L100
 1026              	.LVL107:
 1027              	.L88:
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1028              		.loc 1 897 0
 1029 0104 FFF7FEFF 		bl	vPortExitCritical
 1030              	.LVL108:
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1031              		.loc 1 902 0
 1032 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1033              	.LVL109:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1034              		.loc 1 903 0
 1035 010c FFF7FEFF 		bl	vPortEnterCritical
 1036              	.LVL110:
 1037 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1038 0114 5BB2     		sxtb	r3, r3
 1039 0116 B3F1FF3F 		cmp	r3, #-1
 1040 011a D9D0     		beq	.L101
 1041              	.L89:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1042              		.loc 1 903 0 is_stmt 0 discriminator 3
 1043 011c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1044 0120 5BB2     		sxtb	r3, r3
 1045 0122 B3F1FF3F 		cmp	r3, #-1
 1046 0126 D7D0     		beq	.L102
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 66


 1047              	.L90:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1048              		.loc 1 903 0 discriminator 6
 1049 0128 FFF7FEFF 		bl	vPortExitCritical
 1050              	.LVL111:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1051              		.loc 1 906 0 is_stmt 1 discriminator 6
 1052 012c 01A9     		add	r1, sp, #4
 1053 012e 02A8     		add	r0, sp, #8
 1054 0130 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1055              	.LVL112:
 1056 0134 C8B9     		cbnz	r0, .L91
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1057              		.loc 1 908 0
 1058 0136 2046     		mov	r0, r4
 1059 0138 FFF7FEFF 		bl	prvIsQueueFull
 1060              	.LVL113:
 1061 013c 0028     		cmp	r0, #0
 1062 013e CFD0     		beq	.L92
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1063              		.loc 1 911 0
 1064 0140 0199     		ldr	r1, [sp, #4]
 1065 0142 04F11000 		add	r0, r4, #16
 1066 0146 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1067              	.LVL114:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1068              		.loc 1 918 0
 1069 014a 2046     		mov	r0, r4
 1070 014c FFF7FEFF 		bl	prvUnlockQueue
 1071              	.LVL115:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1072              		.loc 1 925 0
 1073 0150 FFF7FEFF 		bl	xTaskResumeAll
 1074              	.LVL116:
 1075 0154 0028     		cmp	r0, #0
 1076 0156 C8D1     		bne	.L81
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1077              		.loc 1 927 0
 1078 0158 074B     		ldr	r3, .L103
 1079 015a 4FF08052 		mov	r2, #268435456
 1080 015e 1A60     		str	r2, [r3]
 1081              		.syntax unified
 1082              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1083 0160 BFF34F8F 		dsb
 1084              	@ 0 "" 2
 1085              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1086 0164 BFF36F8F 		isb
 1087              	@ 0 "" 2
 1088              		.thumb
 1089              		.syntax unified
 1090 0168 BFE7     		b	.L81
 1091              	.L91:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1092              		.loc 1 940 0
 1093 016a 2046     		mov	r0, r4
 1094 016c FFF7FEFF 		bl	prvUnlockQueue
 1095              	.LVL117:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 67


 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1096              		.loc 1 941 0
 1097 0170 FFF7FEFF 		bl	xTaskResumeAll
 1098              	.LVL118:
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1099              		.loc 1 944 0
 1100 0174 0020     		movs	r0, #0
 1101 0176 A0E7     		b	.L72
 1102              	.L104:
 1103              		.align	2
 1104              	.L103:
 1105 0178 04ED00E0 		.word	-536810236
 1106              		.cfi_endproc
 1107              	.LFE10:
 1109              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1110              		.align	1
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	prvInitialiseMutex:
 1117              	.LFB8:
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1118              		.loc 1 467 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              	.LVL119:
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1123              		.loc 1 468 0
 1124 0000 48B1     		cbz	r0, .L108
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1125              		.loc 1 467 0
 1126 0002 08B5     		push	{r3, lr}
 1127              	.LCFI15:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1131              		.loc 1 474 0
 1132 0004 0021     		movs	r1, #0
 1133 0006 8160     		str	r1, [r0, #8]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1134              		.loc 1 475 0
 1135 0008 0160     		str	r1, [r0]
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1136              		.loc 1 478 0
 1137 000a C160     		str	r1, [r0, #12]
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1138              		.loc 1 483 0
 1139 000c 0B46     		mov	r3, r1
 1140 000e 0A46     		mov	r2, r1
 1141 0010 FFF7FEFF 		bl	xQueueGenericSend
 1142              	.LVL120:
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1143              		.loc 1 489 0
 1144 0014 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 68


 1145              	.LVL121:
 1146              	.L108:
 1147              	.LCFI16:
 1148              		.cfi_def_cfa_offset 0
 1149              		.cfi_restore 3
 1150              		.cfi_restore 14
 1151 0016 7047     		bx	lr
 1152              		.cfi_endproc
 1153              	.LFE8:
 1155              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1156              		.align	1
 1157              		.global	xQueueCreateMutexStatic
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv4-sp-d16
 1163              	xQueueCreateMutexStatic:
 1164              	.LFB9:
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1165              		.loc 1 513 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              	.LVL122:
 1170 0000 10B5     		push	{r4, lr}
 1171              	.LCFI17:
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 4, -8
 1174              		.cfi_offset 14, -4
 1175 0002 82B0     		sub	sp, sp, #8
 1176              	.LCFI18:
 1177              		.cfi_def_cfa_offset 16
 1178              	.LVL123:
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1179              		.loc 1 521 0
 1180 0004 0090     		str	r0, [sp]
 1181 0006 0B46     		mov	r3, r1
 1182 0008 0022     		movs	r2, #0
 1183 000a 1146     		mov	r1, r2
 1184              	.LVL124:
 1185 000c 0120     		movs	r0, #1
 1186              	.LVL125:
 1187 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1188              	.LVL126:
 1189 0012 0446     		mov	r4, r0
 1190              	.LVL127:
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1191              		.loc 1 522 0
 1192 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1193              	.LVL128:
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1194              		.loc 1 525 0
 1195 0018 2046     		mov	r0, r4
 1196 001a 02B0     		add	sp, sp, #8
 1197              	.LCFI19:
 1198              		.cfi_def_cfa_offset 8
 1199              		@ sp needed
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 69


 1200 001c 10BD     		pop	{r4, pc}
 1201              		.cfi_endproc
 1202              	.LFE9:
 1204              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1205              		.align	1
 1206              		.global	xQueueGenericSendFromISR
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1210              		.fpu fpv4-sp-d16
 1212              	xQueueGenericSendFromISR:
 1213              	.LFB11:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1214              		.loc 1 951 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              	.LVL129:
 1219 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1220              	.LCFI20:
 1221              		.cfi_def_cfa_offset 32
 1222              		.cfi_offset 3, -32
 1223              		.cfi_offset 4, -28
 1224              		.cfi_offset 5, -24
 1225              		.cfi_offset 6, -20
 1226              		.cfi_offset 7, -16
 1227              		.cfi_offset 8, -12
 1228              		.cfi_offset 9, -8
 1229              		.cfi_offset 14, -4
 1230              	.LVL130:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1231              		.loc 1 956 0
 1232 0004 60B1     		cbz	r0, .L128
 1233 0006 0446     		mov	r4, r0
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1234              		.loc 1 957 0
 1235 0008 99B9     		cbnz	r1, .L116
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1236              		.loc 1 957 0 is_stmt 0 discriminator 2
 1237 000a 006C     		ldr	r0, [r0, #64]
 1238              	.LVL131:
 1239 000c 88B1     		cbz	r0, .L116
 1240              	.LBB125:
 1241              	.LBB126:
 1242              		.loc 2 195 0 is_stmt 1
 1243              		.syntax unified
 1244              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1245 000e 4FF05003 			mov r3, #80												
 1246 0012 83F31188 		msr basepri, r3											
 1247 0016 BFF36F8F 		isb														
 1248 001a BFF34F8F 		dsb														
 1249              	
 1250              	@ 0 "" 2
 1251              	.LVL132:
 1252              		.thumb
 1253              		.syntax unified
 1254              	.L117:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 70


 1255 001e FEE7     		b	.L117
 1256              	.LVL133:
 1257              	.L128:
 1258              	.LBE126:
 1259              	.LBE125:
 1260              	.LBB127:
 1261              	.LBB128:
 1262              		.syntax unified
 1263              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1264 0020 4FF05003 			mov r3, #80												
 1265 0024 83F31188 		msr basepri, r3											
 1266 0028 BFF36F8F 		isb														
 1267 002c BFF34F8F 		dsb														
 1268              	
 1269              	@ 0 "" 2
 1270              	.LVL134:
 1271              		.thumb
 1272              		.syntax unified
 1273              	.L115:
 1274 0030 FEE7     		b	.L115
 1275              	.LVL135:
 1276              	.L116:
 1277              	.LBE128:
 1278              	.LBE127:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1279              		.loc 1 958 0
 1280 0032 022B     		cmp	r3, #2
 1281 0034 0BD1     		bne	.L118
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1282              		.loc 1 958 0 is_stmt 0 discriminator 2
 1283 0036 E06B     		ldr	r0, [r4, #60]
 1284 0038 0128     		cmp	r0, #1
 1285 003a 08D0     		beq	.L118
 1286              	.LBB129:
 1287              	.LBB130:
 1288              		.loc 2 195 0 is_stmt 1
 1289              		.syntax unified
 1290              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1291 003c 4FF05003 			mov r3, #80												
 1292 0040 83F31188 		msr basepri, r3											
 1293 0044 BFF36F8F 		isb														
 1294 0048 BFF34F8F 		dsb														
 1295              	
 1296              	@ 0 "" 2
 1297              	.LVL136:
 1298              		.thumb
 1299              		.syntax unified
 1300              	.L119:
 1301 004c FEE7     		b	.L119
 1302              	.LVL137:
 1303              	.L118:
 1304 004e 1F46     		mov	r7, r3
 1305 0050 9046     		mov	r8, r2
 1306 0052 8946     		mov	r9, r1
 1307              	.LBE130:
 1308              	.LBE129:
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 71


 1309              		.loc 1 974 0
 1310 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1311              	.LVL138:
 1312              	.LBB131:
 1313              	.LBB132:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1314              		.loc 2 211 0
 1315              		.syntax unified
 1316              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1317 0058 EFF31186 			mrs r6, basepri											
 1318 005c 4FF05003 		mov r3, #80												
 1319 0060 83F31188 		msr basepri, r3											
 1320 0064 BFF36F8F 		isb														
 1321 0068 BFF34F8F 		dsb														
 1322              	
 1323              	@ 0 "" 2
 1324              		.thumb
 1325              		.syntax unified
 1326              	.LBE132:
 1327              	.LBE131:
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1328              		.loc 1 983 0
 1329 006c A26B     		ldr	r2, [r4, #56]
 1330 006e E36B     		ldr	r3, [r4, #60]
 1331 0070 9A42     		cmp	r2, r3
 1332 0072 03D3     		bcc	.L120
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1333              		.loc 1 983 0 is_stmt 0 discriminator 1
 1334 0074 022F     		cmp	r7, #2
 1335 0076 01D0     		beq	.L120
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1336              		.loc 1 1103 0 is_stmt 1
 1337 0078 0020     		movs	r0, #0
 1338 007a 10E0     		b	.L121
 1339              	.L120:
 1340              	.LBB133:
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1341              		.loc 1 985 0
 1342 007c 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1343 0080 6DB2     		sxtb	r5, r5
 1344              	.LVL139:
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 72


 1345              		.loc 1 986 0
 1346 0082 A36B     		ldr	r3, [r4, #56]
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1347              		.loc 1 995 0
 1348 0084 3A46     		mov	r2, r7
 1349 0086 4946     		mov	r1, r9
 1350 0088 2046     		mov	r0, r4
 1351 008a FFF7FEFF 		bl	prvCopyDataToQueue
 1352              	.LVL140:
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1353              		.loc 1 999 0
 1354 008e B5F1FF3F 		cmp	r5, #-1
 1355 0092 08D0     		beq	.L129
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1356              		.loc 1 1095 0
 1357 0094 6B1C     		adds	r3, r5, #1
 1358 0096 5BB2     		sxtb	r3, r3
 1359 0098 84F84530 		strb	r3, [r4, #69]
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1360              		.loc 1 1098 0
 1361 009c 0120     		movs	r0, #1
 1362              	.LVL141:
 1363              	.L121:
 1364              	.LBE133:
 1365              	.LBB134:
 1366              	.LBB135:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1367              		.loc 2 229 0
 1368              		.syntax unified
 1369              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1370 009e 86F31188 			msr basepri, r6	
 1371              	@ 0 "" 2
 1372              	.LVL142:
 1373              		.thumb
 1374              		.syntax unified
 1375              	.LBE135:
 1376              	.LBE134:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1377              		.loc 1 1109 0
 1378 00a2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 73


 1379              	.LVL143:
 1380              	.L129:
 1381              	.LBB136:
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1382              		.loc 1 1061 0
 1383 00a6 636A     		ldr	r3, [r4, #36]
 1384 00a8 5BB1     		cbz	r3, .L124
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1385              		.loc 1 1063 0
 1386 00aa 04F12400 		add	r0, r4, #36
 1387 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList
 1388              	.LVL144:
 1389 00b2 40B1     		cbz	r0, .L125
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1390              		.loc 1 1067 0
 1391 00b4 B8F1000F 		cmp	r8, #0
 1392 00b8 07D0     		beq	.L126
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1393              		.loc 1 1069 0
 1394 00ba 0120     		movs	r0, #1
 1395 00bc C8F80000 		str	r0, [r8]
 1396 00c0 EDE7     		b	.L121
 1397              	.L124:
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1398              		.loc 1 1098 0
 1399 00c2 0120     		movs	r0, #1
 1400 00c4 EBE7     		b	.L121
 1401              	.L125:
 1402 00c6 0120     		movs	r0, #1
 1403 00c8 E9E7     		b	.L121
 1404              	.L126:
 1405 00ca 0120     		movs	r0, #1
 1406 00cc E7E7     		b	.L121
 1407              	.LBE136:
 1408              		.cfi_endproc
 1409              	.LFE11:
 1411              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1412              		.align	1
 1413              		.global	xQueueGiveFromISR
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1417              		.fpu fpv4-sp-d16
 1419              	xQueueGiveFromISR:
 1420              	.LFB12:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1421              		.loc 1 1113 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL145:
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1426              		.loc 1 1124 0
 1427 0000 60B1     		cbz	r0, .L145
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1428              		.loc 1 1113 0
 1429 0002 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 74


 1430              	.LCFI21:
 1431              		.cfi_def_cfa_offset 16
 1432              		.cfi_offset 4, -16
 1433              		.cfi_offset 5, -12
 1434              		.cfi_offset 6, -8
 1435              		.cfi_offset 14, -4
 1436 0004 0446     		mov	r4, r0
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1437              		.loc 1 1128 0
 1438 0006 036C     		ldr	r3, [r0, #64]
 1439 0008 8BB1     		cbz	r3, .L133
 1440              	.LBB137:
 1441              	.LBB138:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1442              		.loc 2 195 0
 1443              		.syntax unified
 1444              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1445 000a 4FF05003 			mov r3, #80												
 1446 000e 83F31188 		msr basepri, r3											
 1447 0012 BFF36F8F 		isb														
 1448 0016 BFF34F8F 		dsb														
 1449              	
 1450              	@ 0 "" 2
 1451              	.LVL146:
 1452              		.thumb
 1453              		.syntax unified
 1454              	.L134:
 1455 001a FEE7     		b	.L134
 1456              	.L145:
 1457              	.LCFI22:
 1458              		.cfi_def_cfa_offset 0
 1459              		.cfi_restore 4
 1460              		.cfi_restore 5
 1461              		.cfi_restore 6
 1462              		.cfi_restore 14
 1463              	.LBE138:
 1464              	.LBE137:
 1465              	.LBB139:
 1466              	.LBB140:
 1467              		.syntax unified
 1468              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1469 001c 4FF05003 			mov r3, #80												
 1470 0020 83F31188 		msr basepri, r3											
 1471 0024 BFF36F8F 		isb														
 1472 0028 BFF34F8F 		dsb														
 1473              	
 1474              	@ 0 "" 2
 1475              	.LVL147:
 1476              		.thumb
 1477              		.syntax unified
 1478              	.L132:
 1479 002c FEE7     		b	.L132
 1480              	.L133:
 1481              	.LCFI23:
 1482              		.cfi_def_cfa_offset 16
 1483              		.cfi_offset 4, -16
 1484              		.cfi_offset 5, -12
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 75


 1485              		.cfi_offset 6, -8
 1486              		.cfi_offset 14, -4
 1487              	.LBE140:
 1488              	.LBE139:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1489              		.loc 1 1133 0
 1490 002e 0368     		ldr	r3, [r0]
 1491 0030 2BB3     		cbz	r3, .L146
 1492              	.L135:
 1493 0032 0E46     		mov	r6, r1
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1494              		.loc 1 1149 0
 1495 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1496              	.LVL148:
 1497              	.LBB141:
 1498              	.LBB142:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1499              		.loc 2 211 0
 1500              		.syntax unified
 1501              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1502 0038 EFF31185 			mrs r5, basepri											
 1503 003c 4FF05003 		mov r3, #80												
 1504 0040 83F31188 		msr basepri, r3											
 1505 0044 BFF36F8F 		isb														
 1506 0048 BFF34F8F 		dsb														
 1507              	
 1508              	@ 0 "" 2
 1509              		.thumb
 1510              		.syntax unified
 1511              	.LBE142:
 1512              	.LBE141:
 1513              	.LBB143:
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1514              		.loc 1 1153 0
 1515 004c A26B     		ldr	r2, [r4, #56]
 1516              	.LVL149:
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1517              		.loc 1 1158 0
 1518 004e E36B     		ldr	r3, [r4, #60]
 1519 0050 9342     		cmp	r3, r2
 1520 0052 26D9     		bls	.L139
 1521              	.LBB144:
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1522              		.loc 1 1160 0
 1523 0054 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1524 0058 5BB2     		sxtb	r3, r3
 1525              	.LVL150:
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1526              		.loc 1 1170 0
 1527 005a 0132     		adds	r2, r2, #1
 1528              	.LVL151:
 1529 005c A263     		str	r2, [r4, #56]
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1530              		.loc 1 1174 0
 1531 005e B3F1FF3F 		cmp	r3, #-1
 1532 0062 18D1     		bne	.L138
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 76


 1533              		.loc 1 1229 0
 1534 0064 636A     		ldr	r3, [r4, #36]
 1535              	.LVL152:
 1536 0066 F3B1     		cbz	r3, .L140
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1537              		.loc 1 1231 0
 1538 0068 04F12400 		add	r0, r4, #36
 1539 006c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1540              	.LVL153:
 1541 0070 D8B1     		cbz	r0, .L141
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1542              		.loc 1 1235 0
 1543 0072 E6B1     		cbz	r6, .L142
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1544              		.loc 1 1237 0
 1545 0074 0120     		movs	r0, #1
 1546 0076 3060     		str	r0, [r6]
 1547              	.L137:
 1548              	.LVL154:
 1549              	.LBE144:
 1550              	.LBE143:
 1551              	.LBB147:
 1552              	.LBB148:
 1553              		.loc 2 229 0
 1554              		.syntax unified
 1555              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1556 0078 85F31188 			msr basepri, r5	
 1557              	@ 0 "" 2
 1558              	.LVL155:
 1559              		.thumb
 1560              		.syntax unified
 1561              	.LBE148:
 1562              	.LBE147:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1563              		.loc 1 1274 0
 1564 007c 70BD     		pop	{r4, r5, r6, pc}
 1565              	.LVL156:
 1566              	.L146:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1567              		.loc 1 1133 0 discriminator 2
 1568 007e 8368     		ldr	r3, [r0, #8]
 1569 0080 002B     		cmp	r3, #0
 1570 0082 D6D0     		beq	.L135
 1571              	.LBB149:
 1572              	.LBB150:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1573              		.loc 2 195 0
 1574              		.syntax unified
 1575              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1576 0084 4FF05003 			mov r3, #80												
 1577 0088 83F31188 		msr basepri, r3											
 1578 008c BFF36F8F 		isb														
 1579 0090 BFF34F8F 		dsb														
 1580              	
 1581              	@ 0 "" 2
 1582              	.LVL157:
 1583              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 77


 1584              		.syntax unified
 1585              	.L136:
 1586 0094 FEE7     		b	.L136
 1587              	.LVL158:
 1588              	.L138:
 1589              	.LBE150:
 1590              	.LBE149:
 1591              	.LBB151:
 1592              	.LBB145:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1593              		.loc 1 1260 0
 1594 0096 0133     		adds	r3, r3, #1
 1595              	.LVL159:
 1596 0098 5BB2     		sxtb	r3, r3
 1597              	.LVL160:
 1598 009a 84F84530 		strb	r3, [r4, #69]
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1599              		.loc 1 1263 0
 1600 009e 0120     		movs	r0, #1
 1601 00a0 EAE7     		b	.L137
 1602              	.LVL161:
 1603              	.L139:
 1604              	.LBE145:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1605              		.loc 1 1268 0
 1606 00a2 0020     		movs	r0, #0
 1607 00a4 E8E7     		b	.L137
 1608              	.LVL162:
 1609              	.L140:
 1610              	.LBB146:
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1611              		.loc 1 1263 0
 1612 00a6 0120     		movs	r0, #1
 1613 00a8 E6E7     		b	.L137
 1614              	.LVL163:
 1615              	.L141:
 1616 00aa 0120     		movs	r0, #1
 1617 00ac E4E7     		b	.L137
 1618              	.L142:
 1619 00ae 0120     		movs	r0, #1
 1620 00b0 E2E7     		b	.L137
 1621              	.LBE146:
 1622              	.LBE151:
 1623              		.cfi_endproc
 1624              	.LFE12:
 1626              		.section	.text.xQueueReceive,"ax",%progbits
 1627              		.align	1
 1628              		.global	xQueueReceive
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv4-sp-d16
 1634              	xQueueReceive:
 1635              	.LFB13:
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1636              		.loc 1 1278 0
 1637              		.cfi_startproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 78


 1638              		@ args = 0, pretend = 0, frame = 16
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              	.LVL164:
 1641 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1642              	.LCFI24:
 1643              		.cfi_def_cfa_offset 20
 1644              		.cfi_offset 4, -20
 1645              		.cfi_offset 5, -16
 1646              		.cfi_offset 6, -12
 1647              		.cfi_offset 7, -8
 1648              		.cfi_offset 14, -4
 1649 0002 85B0     		sub	sp, sp, #20
 1650              	.LCFI25:
 1651              		.cfi_def_cfa_offset 40
 1652 0004 0192     		str	r2, [sp, #4]
 1653              	.LVL165:
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1654              		.loc 1 1284 0
 1655 0006 60B1     		cbz	r0, .L168
 1656 0008 0446     		mov	r4, r0
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1657              		.loc 1 1288 0
 1658 000a 99B9     		cbnz	r1, .L150
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1659              		.loc 1 1288 0 is_stmt 0 discriminator 2
 1660 000c 036C     		ldr	r3, [r0, #64]
 1661 000e 8BB1     		cbz	r3, .L150
 1662              	.LBB152:
 1663              	.LBB153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1664              		.loc 2 195 0 is_stmt 1
 1665              		.syntax unified
 1666              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1667 0010 4FF05003 			mov r3, #80												
 1668 0014 83F31188 		msr basepri, r3											
 1669 0018 BFF36F8F 		isb														
 1670 001c BFF34F8F 		dsb														
 1671              	
 1672              	@ 0 "" 2
 1673              	.LVL166:
 1674              		.thumb
 1675              		.syntax unified
 1676              	.L151:
 1677 0020 FEE7     		b	.L151
 1678              	.L168:
 1679              	.LBE153:
 1680              	.LBE152:
 1681              	.LBB154:
 1682              	.LBB155:
 1683              		.syntax unified
 1684              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1685 0022 4FF05003 			mov r3, #80												
 1686 0026 83F31188 		msr basepri, r3											
 1687 002a BFF36F8F 		isb														
 1688 002e BFF34F8F 		dsb														
 1689              	
 1690              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 79


 1691              	.LVL167:
 1692              		.thumb
 1693              		.syntax unified
 1694              	.L149:
 1695 0032 FEE7     		b	.L149
 1696              	.L150:
 1697 0034 0F46     		mov	r7, r1
 1698              	.LBE155:
 1699              	.LBE154:
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1700              		.loc 1 1293 0
 1701 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 1702              	.LVL168:
 1703 003a 50B9     		cbnz	r0, .L165
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1704              		.loc 1 1293 0 is_stmt 0 discriminator 2
 1705 003c 019B     		ldr	r3, [sp, #4]
 1706 003e 53B1     		cbz	r3, .L166
 1707              	.LBB156:
 1708              	.LBB157:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1709              		.loc 2 195 0 is_stmt 1
 1710              		.syntax unified
 1711              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1712 0040 4FF05003 			mov r3, #80												
 1713 0044 83F31188 		msr basepri, r3											
 1714 0048 BFF36F8F 		isb														
 1715 004c BFF34F8F 		dsb														
 1716              	
 1717              	@ 0 "" 2
 1718              	.LVL169:
 1719              		.thumb
 1720              		.syntax unified
 1721              	.L153:
 1722 0050 FEE7     		b	.L153
 1723              	.L165:
 1724              	.LBE157:
 1725              	.LBE156:
 1726 0052 0026     		movs	r6, #0
 1727 0054 3EE0     		b	.L154
 1728              	.L166:
 1729 0056 0026     		movs	r6, #0
 1730 0058 3CE0     		b	.L154
 1731              	.LVL170:
 1732              	.L171:
 1733              	.LBB158:
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1734              		.loc 1 1312 0
 1735 005a 3946     		mov	r1, r7
 1736 005c 2046     		mov	r0, r4
 1737 005e FFF7FEFF 		bl	prvCopyDataFromQueue
 1738              	.LVL171:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1739              		.loc 1 1314 0
 1740 0062 013D     		subs	r5, r5, #1
 1741              	.LVL172:
 1742 0064 A563     		str	r5, [r4, #56]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 80


1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1743              		.loc 1 1319 0
 1744 0066 2369     		ldr	r3, [r4, #16]
 1745 0068 23B9     		cbnz	r3, .L169
 1746              	.L156:
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1747              		.loc 1 1335 0
 1748 006a FFF7FEFF 		bl	vPortExitCritical
 1749              	.LVL173:
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1750              		.loc 1 1336 0
 1751 006e 0120     		movs	r0, #1
 1752              	.LVL174:
 1753              	.L147:
 1754              	.LBE158:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1755              		.loc 1 1415 0
 1756 0070 05B0     		add	sp, sp, #20
 1757              	.LCFI26:
 1758              		.cfi_remember_state
 1759              		.cfi_def_cfa_offset 20
 1760              		@ sp needed
 1761 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 1762              	.LVL175:
 1763              	.L169:
 1764              	.LCFI27:
 1765              		.cfi_restore_state
 1766              	.LBB159:
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1767              		.loc 1 1321 0
 1768 0074 04F11000 		add	r0, r4, #16
 1769 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1770              	.LVL176:
 1771 007c 0028     		cmp	r0, #0
 1772 007e F4D0     		beq	.L156
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1773              		.loc 1 1323 0
 1774 0080 344B     		ldr	r3, .L176
 1775 0082 4FF08052 		mov	r2, #268435456
 1776 0086 1A60     		str	r2, [r3]
 1777              		.syntax unified
 1778              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1779 0088 BFF34F8F 		dsb
 1780              	@ 0 "" 2
 1781              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1782 008c BFF36F8F 		isb
 1783              	@ 0 "" 2
 1784              		.thumb
 1785              		.syntax unified
 1786 0090 EBE7     		b	.L156
 1787              	.LVL177:
 1788              	.L172:
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1789              		.loc 1 1344 0
 1790 0092 FFF7FEFF 		bl	vPortExitCritical
 1791              	.LVL178:
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 81


 1792              		.loc 1 1346 0
 1793 0096 0020     		movs	r0, #0
 1794 0098 EAE7     		b	.L147
 1795              	.L173:
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1796              		.loc 1 1352 0
 1797 009a 02A8     		add	r0, sp, #8
 1798 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1799              	.LVL179:
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1800              		.loc 1 1353 0
 1801 00a0 0126     		movs	r6, #1
 1802 00a2 21E0     		b	.L159
 1803              	.LVL180:
 1804              	.L174:
 1805              	.LBE159:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1806              		.loc 1 1368 0 discriminator 1
 1807 00a4 0023     		movs	r3, #0
 1808 00a6 84F84430 		strb	r3, [r4, #68]
 1809 00aa 29E0     		b	.L160
 1810              	.L175:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1811              		.loc 1 1368 0 is_stmt 0 discriminator 4
 1812 00ac 0023     		movs	r3, #0
 1813 00ae 84F84530 		strb	r3, [r4, #69]
 1814 00b2 2BE0     		b	.L161
 1815              	.L163:
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1816              		.loc 1 1393 0 is_stmt 1
 1817 00b4 2046     		mov	r0, r4
 1818 00b6 FFF7FEFF 		bl	prvUnlockQueue
 1819              	.LVL181:
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1820              		.loc 1 1394 0
 1821 00ba FFF7FEFF 		bl	xTaskResumeAll
 1822              	.LVL182:
 1823 00be 09E0     		b	.L154
 1824              	.L162:
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1825              		.loc 1 1401 0
 1826 00c0 2046     		mov	r0, r4
 1827 00c2 FFF7FEFF 		bl	prvUnlockQueue
 1828              	.LVL183:
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1829              		.loc 1 1402 0
 1830 00c6 FFF7FEFF 		bl	xTaskResumeAll
 1831              	.LVL184:
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1832              		.loc 1 1404 0
 1833 00ca 2046     		mov	r0, r4
 1834 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 1835              	.LVL185:
 1836 00d0 0028     		cmp	r0, #0
 1837 00d2 3DD1     		bne	.L170
 1838              	.LVL186:
 1839              	.L154:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 82


1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1840              		.loc 1 1303 0
 1841 00d4 FFF7FEFF 		bl	vPortEnterCritical
 1842              	.LVL187:
 1843              	.LBB160:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1844              		.loc 1 1305 0
 1845 00d8 A56B     		ldr	r5, [r4, #56]
 1846              	.LVL188:
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1847              		.loc 1 1309 0
 1848 00da 002D     		cmp	r5, #0
 1849 00dc BDD1     		bne	.L171
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1850              		.loc 1 1340 0
 1851 00de 019B     		ldr	r3, [sp, #4]
 1852 00e0 002B     		cmp	r3, #0
 1853 00e2 D6D0     		beq	.L172
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1854              		.loc 1 1348 0
 1855 00e4 002E     		cmp	r6, #0
 1856 00e6 D8D0     		beq	.L173
 1857              	.LVL189:
 1858              	.L159:
 1859              	.LBE160:
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1860              		.loc 1 1362 0
 1861 00e8 FFF7FEFF 		bl	vPortExitCritical
 1862              	.LVL190:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1863              		.loc 1 1367 0
 1864 00ec FFF7FEFF 		bl	vTaskSuspendAll
 1865              	.LVL191:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1866              		.loc 1 1368 0
 1867 00f0 FFF7FEFF 		bl	vPortEnterCritical
 1868              	.LVL192:
 1869 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1870 00f8 5BB2     		sxtb	r3, r3
 1871 00fa B3F1FF3F 		cmp	r3, #-1
 1872 00fe D1D0     		beq	.L174
 1873              	.L160:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1874              		.loc 1 1368 0 is_stmt 0 discriminator 3
 1875 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1876 0104 5BB2     		sxtb	r3, r3
 1877 0106 B3F1FF3F 		cmp	r3, #-1
 1878 010a CFD0     		beq	.L175
 1879              	.L161:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1880              		.loc 1 1368 0 discriminator 6
 1881 010c FFF7FEFF 		bl	vPortExitCritical
 1882              	.LVL193:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1883              		.loc 1 1371 0 is_stmt 1 discriminator 6
 1884 0110 01A9     		add	r1, sp, #4
 1885 0112 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 83


 1886 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1887              	.LVL194:
 1888 0118 0028     		cmp	r0, #0
 1889 011a D1D1     		bne	.L162
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1890              		.loc 1 1375 0
 1891 011c 2046     		mov	r0, r4
 1892 011e FFF7FEFF 		bl	prvIsQueueEmpty
 1893              	.LVL195:
 1894 0122 0028     		cmp	r0, #0
 1895 0124 C6D0     		beq	.L163
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1896              		.loc 1 1378 0
 1897 0126 0199     		ldr	r1, [sp, #4]
 1898 0128 04F12400 		add	r0, r4, #36
 1899 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 1900              	.LVL196:
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1901              		.loc 1 1379 0
 1902 0130 2046     		mov	r0, r4
 1903 0132 FFF7FEFF 		bl	prvUnlockQueue
 1904              	.LVL197:
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1905              		.loc 1 1380 0
 1906 0136 FFF7FEFF 		bl	xTaskResumeAll
 1907              	.LVL198:
 1908 013a 0028     		cmp	r0, #0
 1909 013c CAD1     		bne	.L154
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1910              		.loc 1 1382 0
 1911 013e 054B     		ldr	r3, .L176
 1912 0140 4FF08052 		mov	r2, #268435456
 1913 0144 1A60     		str	r2, [r3]
 1914              		.syntax unified
 1915              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1916 0146 BFF34F8F 		dsb
 1917              	@ 0 "" 2
 1918              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1919 014a BFF36F8F 		isb
 1920              	@ 0 "" 2
 1921              		.thumb
 1922              		.syntax unified
 1923 014e C1E7     		b	.L154
 1924              	.L170:
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1925              		.loc 1 1407 0
 1926 0150 0020     		movs	r0, #0
 1927 0152 8DE7     		b	.L147
 1928              	.L177:
 1929              		.align	2
 1930              	.L176:
 1931 0154 04ED00E0 		.word	-536810236
 1932              		.cfi_endproc
 1933              	.LFE13:
 1935              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1936              		.align	1
 1937              		.global	xQueueSemaphoreTake
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 84


 1938              		.syntax unified
 1939              		.thumb
 1940              		.thumb_func
 1941              		.fpu fpv4-sp-d16
 1943              	xQueueSemaphoreTake:
 1944              	.LFB14:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1945              		.loc 1 1419 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 16
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              	.LVL199:
 1950 0000 70B5     		push	{r4, r5, r6, lr}
 1951              	.LCFI28:
 1952              		.cfi_def_cfa_offset 16
 1953              		.cfi_offset 4, -16
 1954              		.cfi_offset 5, -12
 1955              		.cfi_offset 6, -8
 1956              		.cfi_offset 14, -4
 1957 0002 84B0     		sub	sp, sp, #16
 1958              	.LCFI29:
 1959              		.cfi_def_cfa_offset 32
 1960 0004 0191     		str	r1, [sp, #4]
 1961              	.LVL200:
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1962              		.loc 1 1429 0
 1963 0006 40B9     		cbnz	r0, .L179
 1964              	.LBB161:
 1965              	.LBB162:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1966              		.loc 2 195 0
 1967              		.syntax unified
 1968              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1969 0008 4FF05003 			mov r3, #80												
 1970 000c 83F31188 		msr basepri, r3											
 1971 0010 BFF36F8F 		isb														
 1972 0014 BFF34F8F 		dsb														
 1973              	
 1974              	@ 0 "" 2
 1975              	.LVL201:
 1976              		.thumb
 1977              		.syntax unified
 1978              	.L180:
 1979 0018 FEE7     		b	.L180
 1980              	.L179:
 1981 001a 0446     		mov	r4, r0
 1982              	.LBE162:
 1983              	.LBE161:
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1984              		.loc 1 1433 0
 1985 001c 036C     		ldr	r3, [r0, #64]
 1986 001e 43B1     		cbz	r3, .L181
 1987              	.LBB163:
 1988              	.LBB164:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1989              		.loc 2 195 0
 1990              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 85


 1991              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1992 0020 4FF05003 			mov r3, #80												
 1993 0024 83F31188 		msr basepri, r3											
 1994 0028 BFF36F8F 		isb														
 1995 002c BFF34F8F 		dsb														
 1996              	
 1997              	@ 0 "" 2
 1998              	.LVL202:
 1999              		.thumb
 2000              		.syntax unified
 2001              	.L182:
 2002 0030 FEE7     		b	.L182
 2003              	.L181:
 2004              	.LBE164:
 2005              	.LBE163:
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2006              		.loc 1 1438 0
 2007 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2008              	.LVL203:
 2009 0036 50B9     		cbnz	r0, .L200
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2010              		.loc 1 1438 0 is_stmt 0 discriminator 2
 2011 0038 019B     		ldr	r3, [sp, #4]
 2012 003a 5BB1     		cbz	r3, .L201
 2013              	.LBB165:
 2014              	.LBB166:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2015              		.loc 2 195 0 is_stmt 1
 2016              		.syntax unified
 2017              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2018 003c 4FF05003 			mov r3, #80												
 2019 0040 83F31188 		msr basepri, r3											
 2020 0044 BFF36F8F 		isb														
 2021 0048 BFF34F8F 		dsb														
 2022              	
 2023              	@ 0 "" 2
 2024              	.LVL204:
 2025              		.thumb
 2026              		.syntax unified
 2027              	.L184:
 2028 004c FEE7     		b	.L184
 2029              	.L200:
 2030              	.LBE166:
 2031              	.LBE165:
 2032 004e 0025     		movs	r5, #0
 2033 0050 2E46     		mov	r6, r5
 2034 0052 51E0     		b	.L185
 2035              	.L201:
 2036 0054 0025     		movs	r5, #0
 2037 0056 2E46     		mov	r6, r5
 2038 0058 4EE0     		b	.L185
 2039              	.LVL205:
 2040              	.L204:
 2041              	.LBB167:
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2042              		.loc 1 1462 0
 2043 005a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 86


 2044              	.LVL206:
 2045 005c A363     		str	r3, [r4, #56]
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2046              		.loc 1 1466 0
 2047 005e 2368     		ldr	r3, [r4]
 2048              	.LVL207:
 2049 0060 13B9     		cbnz	r3, .L187
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2050              		.loc 1 1470 0
 2051 0062 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2052              	.LVL208:
 2053 0066 A060     		str	r0, [r4, #8]
 2054              	.L187:
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2055              		.loc 1 1481 0
 2056 0068 2369     		ldr	r3, [r4, #16]
 2057 006a 63B1     		cbz	r3, .L188
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2058              		.loc 1 1483 0
 2059 006c 04F11000 		add	r0, r4, #16
 2060 0070 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2061              	.LVL209:
 2062 0074 38B1     		cbz	r0, .L188
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2063              		.loc 1 1485 0
 2064 0076 484B     		ldr	r3, .L210
 2065 0078 4FF08052 		mov	r2, #268435456
 2066 007c 1A60     		str	r2, [r3]
 2067              		.syntax unified
 2068              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2069 007e BFF34F8F 		dsb
 2070              	@ 0 "" 2
 2071              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2072 0082 BFF36F8F 		isb
 2073              	@ 0 "" 2
 2074              		.thumb
 2075              		.syntax unified
 2076              	.L188:
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2077              		.loc 1 1497 0
 2078 0086 FFF7FEFF 		bl	vPortExitCritical
 2079              	.LVL210:
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2080              		.loc 1 1498 0
 2081 008a 0125     		movs	r5, #1
 2082              	.LVL211:
 2083              	.L178:
 2084              	.LBE167:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2085              		.loc 1 1633 0
 2086 008c 2846     		mov	r0, r5
 2087 008e 04B0     		add	sp, sp, #16
 2088              	.LCFI30:
 2089              		.cfi_remember_state
 2090              		.cfi_def_cfa_offset 16
 2091              		@ sp needed
 2092 0090 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 87


 2093              	.LVL212:
 2094              	.L205:
 2095              	.LCFI31:
 2096              		.cfi_restore_state
 2097              	.LBB170:
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2098              		.loc 1 1509 0
 2099 0092 45B1     		cbz	r5, .L191
 2100              	.LBB168:
 2101              	.LBB169:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2102              		.loc 2 195 0
 2103              		.syntax unified
 2104              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2105 0094 4FF05003 			mov r3, #80												
 2106 0098 83F31188 		msr basepri, r3											
 2107 009c BFF36F8F 		isb														
 2108 00a0 BFF34F8F 		dsb														
 2109              	
 2110              	@ 0 "" 2
 2111              	.LVL213:
 2112              		.thumb
 2113              		.syntax unified
 2114              	.L192:
 2115 00a4 FEE7     		b	.L192
 2116              	.L191:
 2117              	.LBE169:
 2118              	.LBE168:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2119              		.loc 1 1515 0
 2120 00a6 FFF7FEFF 		bl	vPortExitCritical
 2121              	.LVL214:
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2122              		.loc 1 1517 0
 2123 00aa EFE7     		b	.L178
 2124              	.L206:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2125              		.loc 1 1523 0
 2126 00ac 02A8     		add	r0, sp, #8
 2127 00ae FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2128              	.LVL215:
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2129              		.loc 1 1524 0
 2130 00b2 0126     		movs	r6, #1
 2131 00b4 2AE0     		b	.L193
 2132              	.LVL216:
 2133              	.L207:
 2134              	.LBE170:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2135              		.loc 1 1539 0 discriminator 1
 2136 00b6 0023     		movs	r3, #0
 2137 00b8 84F84430 		strb	r3, [r4, #68]
 2138 00bc 32E0     		b	.L194
 2139              	.L208:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2140              		.loc 1 1539 0 is_stmt 0 discriminator 4
 2141 00be 0023     		movs	r3, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 88


 2142 00c0 84F84530 		strb	r3, [r4, #69]
 2143 00c4 34E0     		b	.L195
 2144              	.L209:
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2145              		.loc 1 1556 0 is_stmt 1
 2146 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2147              	.LVL217:
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2148              		.loc 1 1558 0
 2149 00ca A068     		ldr	r0, [r4, #8]
 2150 00cc FFF7FEFF 		bl	xTaskPriorityInherit
 2151              	.LVL218:
 2152 00d0 0546     		mov	r5, r0
 2153              	.LVL219:
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2154              		.loc 1 1560 0
 2155 00d2 FFF7FEFF 		bl	vPortExitCritical
 2156              	.LVL220:
 2157 00d6 3BE0     		b	.L198
 2158              	.L197:
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2159              		.loc 1 1584 0
 2160 00d8 2046     		mov	r0, r4
 2161 00da FFF7FEFF 		bl	prvUnlockQueue
 2162              	.LVL221:
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2163              		.loc 1 1585 0
 2164 00de FFF7FEFF 		bl	xTaskResumeAll
 2165              	.LVL222:
 2166 00e2 09E0     		b	.L185
 2167              	.L196:
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2168              		.loc 1 1591 0
 2169 00e4 2046     		mov	r0, r4
 2170 00e6 FFF7FEFF 		bl	prvUnlockQueue
 2171              	.LVL223:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2172              		.loc 1 1592 0
 2173 00ea FFF7FEFF 		bl	xTaskResumeAll
 2174              	.LVL224:
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2175              		.loc 1 1598 0
 2176 00ee 2046     		mov	r0, r4
 2177 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 2178              	.LVL225:
 2179 00f4 0028     		cmp	r0, #0
 2180 00f6 40D1     		bne	.L203
 2181              	.LVL226:
 2182              	.L185:
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2183              		.loc 1 1448 0
 2184 00f8 FFF7FEFF 		bl	vPortEnterCritical
 2185              	.LVL227:
 2186              	.LBB171:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2187              		.loc 1 1452 0
 2188 00fc A36B     		ldr	r3, [r4, #56]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 89


 2189              	.LVL228:
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2190              		.loc 1 1456 0
 2191 00fe 002B     		cmp	r3, #0
 2192 0100 ABD1     		bne	.L204
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2193              		.loc 1 1502 0
 2194 0102 019B     		ldr	r3, [sp, #4]
 2195              	.LVL229:
 2196 0104 002B     		cmp	r3, #0
 2197 0106 C4D0     		beq	.L205
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2198              		.loc 1 1519 0
 2199 0108 002E     		cmp	r6, #0
 2200 010a CFD0     		beq	.L206
 2201              	.LVL230:
 2202              	.L193:
 2203              	.LBE171:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2204              		.loc 1 1533 0
 2205 010c FFF7FEFF 		bl	vPortExitCritical
 2206              	.LVL231:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2207              		.loc 1 1538 0
 2208 0110 FFF7FEFF 		bl	vTaskSuspendAll
 2209              	.LVL232:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2210              		.loc 1 1539 0
 2211 0114 FFF7FEFF 		bl	vPortEnterCritical
 2212              	.LVL233:
 2213 0118 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2214 011c 5BB2     		sxtb	r3, r3
 2215 011e B3F1FF3F 		cmp	r3, #-1
 2216 0122 C8D0     		beq	.L207
 2217              	.L194:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2218              		.loc 1 1539 0 is_stmt 0 discriminator 3
 2219 0124 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2220 0128 5BB2     		sxtb	r3, r3
 2221 012a B3F1FF3F 		cmp	r3, #-1
 2222 012e C6D0     		beq	.L208
 2223              	.L195:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2224              		.loc 1 1539 0 discriminator 6
 2225 0130 FFF7FEFF 		bl	vPortExitCritical
 2226              	.LVL234:
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2227              		.loc 1 1542 0 is_stmt 1 discriminator 6
 2228 0134 01A9     		add	r1, sp, #4
 2229 0136 02A8     		add	r0, sp, #8
 2230 0138 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2231              	.LVL235:
 2232 013c 0028     		cmp	r0, #0
 2233 013e D1D1     		bne	.L196
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2234              		.loc 1 1548 0
 2235 0140 2046     		mov	r0, r4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 90


 2236 0142 FFF7FEFF 		bl	prvIsQueueEmpty
 2237              	.LVL236:
 2238 0146 0028     		cmp	r0, #0
 2239 0148 C6D0     		beq	.L197
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2240              		.loc 1 1554 0
 2241 014a 2368     		ldr	r3, [r4]
 2242 014c 002B     		cmp	r3, #0
 2243 014e BAD0     		beq	.L209
 2244              	.L198:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2245              		.loc 1 1569 0
 2246 0150 0199     		ldr	r1, [sp, #4]
 2247 0152 04F12400 		add	r0, r4, #36
 2248 0156 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2249              	.LVL237:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2250              		.loc 1 1570 0
 2251 015a 2046     		mov	r0, r4
 2252 015c FFF7FEFF 		bl	prvUnlockQueue
 2253              	.LVL238:
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2254              		.loc 1 1571 0
 2255 0160 FFF7FEFF 		bl	xTaskResumeAll
 2256              	.LVL239:
 2257 0164 0028     		cmp	r0, #0
 2258 0166 C7D1     		bne	.L185
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2259              		.loc 1 1573 0
 2260 0168 0B4B     		ldr	r3, .L210
 2261 016a 4FF08052 		mov	r2, #268435456
 2262 016e 1A60     		str	r2, [r3]
 2263              		.syntax unified
 2264              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2265 0170 BFF34F8F 		dsb
 2266              	@ 0 "" 2
 2267              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2268 0174 BFF36F8F 		isb
 2269              	@ 0 "" 2
 2270              		.thumb
 2271              		.syntax unified
 2272 0178 BEE7     		b	.L185
 2273              	.L203:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2274              		.loc 1 1605 0
 2275 017a 002D     		cmp	r5, #0
 2276 017c 86D0     		beq	.L178
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2277              		.loc 1 1607 0
 2278 017e FFF7FEFF 		bl	vPortEnterCritical
 2279              	.LVL240:
 2280              	.LBB172:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2281              		.loc 1 1616 0
 2282 0182 2046     		mov	r0, r4
 2283 0184 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2284              	.LVL241:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 91


1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2285              		.loc 1 1617 0
 2286 0188 0146     		mov	r1, r0
 2287 018a A068     		ldr	r0, [r4, #8]
 2288              	.LVL242:
 2289 018c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2290              	.LVL243:
 2291              	.LBE172:
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2292              		.loc 1 1619 0
 2293 0190 FFF7FEFF 		bl	vPortExitCritical
 2294              	.LVL244:
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2295              		.loc 1 1625 0
 2296 0194 0025     		movs	r5, #0
 2297              	.LVL245:
 2298 0196 79E7     		b	.L178
 2299              	.L211:
 2300              		.align	2
 2301              	.L210:
 2302 0198 04ED00E0 		.word	-536810236
 2303              		.cfi_endproc
 2304              	.LFE14:
 2306              		.section	.text.xQueuePeek,"ax",%progbits
 2307              		.align	1
 2308              		.global	xQueuePeek
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2312              		.fpu fpv4-sp-d16
 2314              	xQueuePeek:
 2315              	.LFB15:
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2316              		.loc 1 1637 0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 16
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              	.LVL246:
 2321 0000 70B5     		push	{r4, r5, r6, lr}
 2322              	.LCFI32:
 2323              		.cfi_def_cfa_offset 16
 2324              		.cfi_offset 4, -16
 2325              		.cfi_offset 5, -12
 2326              		.cfi_offset 6, -8
 2327              		.cfi_offset 14, -4
 2328 0002 84B0     		sub	sp, sp, #16
 2329              	.LCFI33:
 2330              		.cfi_def_cfa_offset 32
 2331 0004 0192     		str	r2, [sp, #4]
 2332              	.LVL247:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2333              		.loc 1 1644 0
 2334 0006 60B1     		cbz	r0, .L233
 2335 0008 0446     		mov	r4, r0
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2336              		.loc 1 1648 0
 2337 000a 99B9     		cbnz	r1, .L215
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 92


1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2338              		.loc 1 1648 0 is_stmt 0 discriminator 2
 2339 000c 036C     		ldr	r3, [r0, #64]
 2340 000e 8BB1     		cbz	r3, .L215
 2341              	.LBB173:
 2342              	.LBB174:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2343              		.loc 2 195 0 is_stmt 1
 2344              		.syntax unified
 2345              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2346 0010 4FF05003 			mov r3, #80												
 2347 0014 83F31188 		msr basepri, r3											
 2348 0018 BFF36F8F 		isb														
 2349 001c BFF34F8F 		dsb														
 2350              	
 2351              	@ 0 "" 2
 2352              	.LVL248:
 2353              		.thumb
 2354              		.syntax unified
 2355              	.L216:
 2356 0020 FEE7     		b	.L216
 2357              	.L233:
 2358              	.LBE174:
 2359              	.LBE173:
 2360              	.LBB175:
 2361              	.LBB176:
 2362              		.syntax unified
 2363              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2364 0022 4FF05003 			mov r3, #80												
 2365 0026 83F31188 		msr basepri, r3											
 2366 002a BFF36F8F 		isb														
 2367 002e BFF34F8F 		dsb														
 2368              	
 2369              	@ 0 "" 2
 2370              	.LVL249:
 2371              		.thumb
 2372              		.syntax unified
 2373              	.L214:
 2374 0032 FEE7     		b	.L214
 2375              	.L215:
 2376 0034 0E46     		mov	r6, r1
 2377              	.LBE176:
 2378              	.LBE175:
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2379              		.loc 1 1653 0
 2380 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 2381              	.LVL250:
 2382 003a 50B9     		cbnz	r0, .L230
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2383              		.loc 1 1653 0 is_stmt 0 discriminator 2
 2384 003c 019B     		ldr	r3, [sp, #4]
 2385 003e 53B1     		cbz	r3, .L231
 2386              	.LBB177:
 2387              	.LBB178:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2388              		.loc 2 195 0 is_stmt 1
 2389              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 93


 2390              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2391 0040 4FF05003 			mov r3, #80												
 2392 0044 83F31188 		msr basepri, r3											
 2393 0048 BFF36F8F 		isb														
 2394 004c BFF34F8F 		dsb														
 2395              	
 2396              	@ 0 "" 2
 2397              	.LVL251:
 2398              		.thumb
 2399              		.syntax unified
 2400              	.L218:
 2401 0050 FEE7     		b	.L218
 2402              	.L230:
 2403              	.LBE178:
 2404              	.LBE177:
 2405 0052 0025     		movs	r5, #0
 2406 0054 3EE0     		b	.L219
 2407              	.L231:
 2408 0056 0025     		movs	r5, #0
 2409 0058 3CE0     		b	.L219
 2410              	.LVL252:
 2411              	.L236:
 2412              	.LBB179:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2413              		.loc 1 1674 0
 2414 005a E568     		ldr	r5, [r4, #12]
 2415              	.LVL253:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2416              		.loc 1 1676 0
 2417 005c 3146     		mov	r1, r6
 2418 005e 2046     		mov	r0, r4
 2419 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 2420              	.LVL254:
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2421              		.loc 1 1680 0
 2422 0064 E560     		str	r5, [r4, #12]
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2423              		.loc 1 1684 0
 2424 0066 636A     		ldr	r3, [r4, #36]
 2425 0068 23B9     		cbnz	r3, .L234
 2426              	.L221:
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2427              		.loc 1 1701 0
 2428 006a FFF7FEFF 		bl	vPortExitCritical
 2429              	.LVL255:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2430              		.loc 1 1702 0
 2431 006e 0120     		movs	r0, #1
 2432              	.LVL256:
 2433              	.L212:
 2434              	.LBE179:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2435              		.loc 1 1782 0
 2436 0070 04B0     		add	sp, sp, #16
 2437              	.LCFI34:
 2438              		.cfi_remember_state
 2439              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 94


 2440              		@ sp needed
 2441 0072 70BD     		pop	{r4, r5, r6, pc}
 2442              	.LVL257:
 2443              	.L234:
 2444              	.LCFI35:
 2445              		.cfi_restore_state
 2446              	.LBB180:
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2447              		.loc 1 1686 0
 2448 0074 04F12400 		add	r0, r4, #36
 2449 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2450              	.LVL258:
 2451 007c 0028     		cmp	r0, #0
 2452 007e F4D0     		beq	.L221
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2453              		.loc 1 1689 0
 2454 0080 344B     		ldr	r3, .L241
 2455 0082 4FF08052 		mov	r2, #268435456
 2456 0086 1A60     		str	r2, [r3]
 2457              		.syntax unified
 2458              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2459 0088 BFF34F8F 		dsb
 2460              	@ 0 "" 2
 2461              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2462 008c BFF36F8F 		isb
 2463              	@ 0 "" 2
 2464              		.thumb
 2465              		.syntax unified
 2466 0090 EBE7     		b	.L221
 2467              	.LVL259:
 2468              	.L237:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2469              		.loc 1 1710 0
 2470 0092 FFF7FEFF 		bl	vPortExitCritical
 2471              	.LVL260:
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2472              		.loc 1 1712 0
 2473 0096 0020     		movs	r0, #0
 2474 0098 EAE7     		b	.L212
 2475              	.L238:
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2476              		.loc 1 1719 0
 2477 009a 02A8     		add	r0, sp, #8
 2478 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2479              	.LVL261:
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2480              		.loc 1 1720 0
 2481 00a0 0125     		movs	r5, #1
 2482 00a2 21E0     		b	.L224
 2483              	.LVL262:
 2484              	.L239:
 2485              	.LBE180:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2486              		.loc 1 1735 0 discriminator 1
 2487 00a4 0023     		movs	r3, #0
 2488 00a6 84F84430 		strb	r3, [r4, #68]
 2489 00aa 29E0     		b	.L225
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 95


 2490              	.L240:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2491              		.loc 1 1735 0 is_stmt 0 discriminator 4
 2492 00ac 0023     		movs	r3, #0
 2493 00ae 84F84530 		strb	r3, [r4, #69]
 2494 00b2 2BE0     		b	.L226
 2495              	.L228:
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2496              		.loc 1 1760 0 is_stmt 1
 2497 00b4 2046     		mov	r0, r4
 2498 00b6 FFF7FEFF 		bl	prvUnlockQueue
 2499              	.LVL263:
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2500              		.loc 1 1761 0
 2501 00ba FFF7FEFF 		bl	xTaskResumeAll
 2502              	.LVL264:
 2503 00be 09E0     		b	.L219
 2504              	.L227:
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2505              		.loc 1 1768 0
 2506 00c0 2046     		mov	r0, r4
 2507 00c2 FFF7FEFF 		bl	prvUnlockQueue
 2508              	.LVL265:
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2509              		.loc 1 1769 0
 2510 00c6 FFF7FEFF 		bl	xTaskResumeAll
 2511              	.LVL266:
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2512              		.loc 1 1771 0
 2513 00ca 2046     		mov	r0, r4
 2514 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 2515              	.LVL267:
 2516 00d0 0028     		cmp	r0, #0
 2517 00d2 3DD1     		bne	.L235
 2518              	.LVL268:
 2519              	.L219:
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2520              		.loc 1 1663 0
 2521 00d4 FFF7FEFF 		bl	vPortEnterCritical
 2522              	.LVL269:
 2523              	.LBB181:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2524              		.loc 1 1665 0
 2525 00d8 A36B     		ldr	r3, [r4, #56]
 2526              	.LVL270:
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2527              		.loc 1 1669 0
 2528 00da 002B     		cmp	r3, #0
 2529 00dc BDD1     		bne	.L236
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2530              		.loc 1 1706 0
 2531 00de 019B     		ldr	r3, [sp, #4]
 2532              	.LVL271:
 2533 00e0 002B     		cmp	r3, #0
 2534 00e2 D6D0     		beq	.L237
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2535              		.loc 1 1714 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 96


 2536 00e4 002D     		cmp	r5, #0
 2537 00e6 D8D0     		beq	.L238
 2538              	.LVL272:
 2539              	.L224:
 2540              	.LBE181:
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2541              		.loc 1 1729 0
 2542 00e8 FFF7FEFF 		bl	vPortExitCritical
 2543              	.LVL273:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2544              		.loc 1 1734 0
 2545 00ec FFF7FEFF 		bl	vTaskSuspendAll
 2546              	.LVL274:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2547              		.loc 1 1735 0
 2548 00f0 FFF7FEFF 		bl	vPortEnterCritical
 2549              	.LVL275:
 2550 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2551 00f8 5BB2     		sxtb	r3, r3
 2552 00fa B3F1FF3F 		cmp	r3, #-1
 2553 00fe D1D0     		beq	.L239
 2554              	.L225:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2555              		.loc 1 1735 0 is_stmt 0 discriminator 3
 2556 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2557 0104 5BB2     		sxtb	r3, r3
 2558 0106 B3F1FF3F 		cmp	r3, #-1
 2559 010a CFD0     		beq	.L240
 2560              	.L226:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2561              		.loc 1 1735 0 discriminator 6
 2562 010c FFF7FEFF 		bl	vPortExitCritical
 2563              	.LVL276:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2564              		.loc 1 1738 0 is_stmt 1 discriminator 6
 2565 0110 01A9     		add	r1, sp, #4
 2566 0112 02A8     		add	r0, sp, #8
 2567 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2568              	.LVL277:
 2569 0118 0028     		cmp	r0, #0
 2570 011a D1D1     		bne	.L227
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2571              		.loc 1 1742 0
 2572 011c 2046     		mov	r0, r4
 2573 011e FFF7FEFF 		bl	prvIsQueueEmpty
 2574              	.LVL278:
 2575 0122 0028     		cmp	r0, #0
 2576 0124 C6D0     		beq	.L228
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2577              		.loc 1 1745 0
 2578 0126 0199     		ldr	r1, [sp, #4]
 2579 0128 04F12400 		add	r0, r4, #36
 2580 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2581              	.LVL279:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2582              		.loc 1 1746 0
 2583 0130 2046     		mov	r0, r4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 97


 2584 0132 FFF7FEFF 		bl	prvUnlockQueue
 2585              	.LVL280:
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2586              		.loc 1 1747 0
 2587 0136 FFF7FEFF 		bl	xTaskResumeAll
 2588              	.LVL281:
 2589 013a 0028     		cmp	r0, #0
 2590 013c CAD1     		bne	.L219
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2591              		.loc 1 1749 0
 2592 013e 054B     		ldr	r3, .L241
 2593 0140 4FF08052 		mov	r2, #268435456
 2594 0144 1A60     		str	r2, [r3]
 2595              		.syntax unified
 2596              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2597 0146 BFF34F8F 		dsb
 2598              	@ 0 "" 2
 2599              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2600 014a BFF36F8F 		isb
 2601              	@ 0 "" 2
 2602              		.thumb
 2603              		.syntax unified
 2604 014e C1E7     		b	.L219
 2605              	.L235:
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2606              		.loc 1 1774 0
 2607 0150 0020     		movs	r0, #0
 2608 0152 8DE7     		b	.L212
 2609              	.L242:
 2610              		.align	2
 2611              	.L241:
 2612 0154 04ED00E0 		.word	-536810236
 2613              		.cfi_endproc
 2614              	.LFE15:
 2616              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2617              		.align	1
 2618              		.global	xQueueReceiveFromISR
 2619              		.syntax unified
 2620              		.thumb
 2621              		.thumb_func
 2622              		.fpu fpv4-sp-d16
 2624              	xQueueReceiveFromISR:
 2625              	.LFB16:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2626              		.loc 1 1786 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
 2630              	.LVL282:
 2631 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2632              	.LCFI36:
 2633              		.cfi_def_cfa_offset 32
 2634              		.cfi_offset 3, -32
 2635              		.cfi_offset 4, -28
 2636              		.cfi_offset 5, -24
 2637              		.cfi_offset 6, -20
 2638              		.cfi_offset 7, -16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 98


 2639              		.cfi_offset 8, -12
 2640              		.cfi_offset 9, -8
 2641              		.cfi_offset 14, -4
 2642              	.LVL283:
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2643              		.loc 1 1791 0
 2644 0004 60B1     		cbz	r0, .L255
 2645 0006 0446     		mov	r4, r0
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2646              		.loc 1 1792 0
 2647 0008 99B9     		cbnz	r1, .L246
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2648              		.loc 1 1792 0 is_stmt 0 discriminator 2
 2649 000a 036C     		ldr	r3, [r0, #64]
 2650 000c 8BB1     		cbz	r3, .L246
 2651              	.LBB182:
 2652              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2653              		.loc 2 195 0 is_stmt 1
 2654              		.syntax unified
 2655              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2656 000e 4FF05003 			mov r3, #80												
 2657 0012 83F31188 		msr basepri, r3											
 2658 0016 BFF36F8F 		isb														
 2659 001a BFF34F8F 		dsb														
 2660              	
 2661              	@ 0 "" 2
 2662              	.LVL284:
 2663              		.thumb
 2664              		.syntax unified
 2665              	.L247:
 2666 001e FEE7     		b	.L247
 2667              	.L255:
 2668              	.LBE183:
 2669              	.LBE182:
 2670              	.LBB184:
 2671              	.LBB185:
 2672              		.syntax unified
 2673              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2674 0020 4FF05003 			mov r3, #80												
 2675 0024 83F31188 		msr basepri, r3											
 2676 0028 BFF36F8F 		isb														
 2677 002c BFF34F8F 		dsb														
 2678              	
 2679              	@ 0 "" 2
 2680              	.LVL285:
 2681              		.thumb
 2682              		.syntax unified
 2683              	.L245:
 2684 0030 FEE7     		b	.L245
 2685              	.L246:
 2686 0032 1746     		mov	r7, r2
 2687 0034 8946     		mov	r9, r1
 2688              	.LBE185:
 2689              	.LBE184:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2690              		.loc 1 1808 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 99


 2691 0036 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2692              	.LVL286:
 2693              	.LBB186:
 2694              	.LBB187:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2695              		.loc 2 211 0
 2696              		.syntax unified
 2697              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2698 003a EFF31186 			mrs r6, basepri											
 2699 003e 4FF05003 		mov r3, #80												
 2700 0042 83F31188 		msr basepri, r3											
 2701 0046 BFF36F8F 		isb														
 2702 004a BFF34F8F 		dsb														
 2703              	
 2704              	@ 0 "" 2
 2705              		.thumb
 2706              		.syntax unified
 2707              	.LBE187:
 2708              	.LBE186:
 2709              	.LBB188:
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2710              		.loc 1 1812 0
 2711 004e D4F83880 		ldr	r8, [r4, #56]
 2712              	.LVL287:
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2713              		.loc 1 1815 0
 2714 0052 B8F1000F 		cmp	r8, #0
 2715 0056 1DD0     		beq	.L250
 2716              	.LBB189:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2717              		.loc 1 1817 0
 2718 0058 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2719 005c 6DB2     		sxtb	r5, r5
 2720              	.LVL288:
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2721              		.loc 1 1821 0
 2722 005e 4946     		mov	r1, r9
 2723 0060 2046     		mov	r0, r4
 2724 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 2725              	.LVL289:
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2726              		.loc 1 1822 0
 2727 0066 08F1FF33 		add	r3, r8, #-1
 2728 006a A363     		str	r3, [r4, #56]
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2729              		.loc 1 1828 0
 2730 006c B5F1FF3F 		cmp	r5, #-1
 2731 0070 05D0     		beq	.L256
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2732              		.loc 1 1859 0
 2733 0072 6B1C     		adds	r3, r5, #1
 2734 0074 5BB2     		sxtb	r3, r3
 2735 0076 84F84430 		strb	r3, [r4, #68]
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2736              		.loc 1 1862 0
 2737 007a 0120     		movs	r0, #1
 2738 007c 0BE0     		b	.L248
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 100


 2739              	.L256:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2740              		.loc 1 1830 0
 2741 007e 2369     		ldr	r3, [r4, #16]
 2742 0080 6BB1     		cbz	r3, .L251
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2743              		.loc 1 1832 0
 2744 0082 04F11000 		add	r0, r4, #16
 2745 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2746              	.LVL290:
 2747 008a 50B1     		cbz	r0, .L252
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2748              		.loc 1 1836 0
 2749 008c 5FB1     		cbz	r7, .L253
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2750              		.loc 1 1838 0
 2751 008e 0120     		movs	r0, #1
 2752 0090 3860     		str	r0, [r7]
 2753 0092 00E0     		b	.L248
 2754              	.LVL291:
 2755              	.L250:
 2756              	.LBE189:
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2757              		.loc 1 1866 0
 2758 0094 0020     		movs	r0, #0
 2759              	.L248:
 2760              	.LVL292:
 2761              	.LBE188:
 2762              	.LBB191:
 2763              	.LBB192:
 2764              		.loc 2 229 0
 2765              		.syntax unified
 2766              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2767 0096 86F31188 			msr basepri, r6	
 2768              	@ 0 "" 2
 2769              	.LVL293:
 2770              		.thumb
 2771              		.syntax unified
 2772              	.LBE192:
 2773              	.LBE191:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2774              		.loc 1 1873 0
 2775 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2776              	.LVL294:
 2777              	.L251:
 2778              	.LBB193:
 2779              	.LBB190:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2780              		.loc 1 1862 0
 2781 009e 0120     		movs	r0, #1
 2782 00a0 F9E7     		b	.L248
 2783              	.L252:
 2784 00a2 0120     		movs	r0, #1
 2785 00a4 F7E7     		b	.L248
 2786              	.L253:
 2787 00a6 0120     		movs	r0, #1
 2788 00a8 F5E7     		b	.L248
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 101


 2789              	.LBE190:
 2790              	.LBE193:
 2791              		.cfi_endproc
 2792              	.LFE16:
 2794              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2795              		.align	1
 2796              		.global	xQueuePeekFromISR
 2797              		.syntax unified
 2798              		.thumb
 2799              		.thumb_func
 2800              		.fpu fpv4-sp-d16
 2802              	xQueuePeekFromISR:
 2803              	.LFB17:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2804              		.loc 1 1877 0
 2805              		.cfi_startproc
 2806              		@ args = 0, pretend = 0, frame = 0
 2807              		@ frame_needed = 0, uses_anonymous_args = 0
 2808              	.LVL295:
 2809 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2810              	.LCFI37:
 2811              		.cfi_def_cfa_offset 24
 2812              		.cfi_offset 3, -24
 2813              		.cfi_offset 4, -20
 2814              		.cfi_offset 5, -16
 2815              		.cfi_offset 6, -12
 2816              		.cfi_offset 7, -8
 2817              		.cfi_offset 14, -4
 2818              	.LVL296:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2819              		.loc 1 1883 0
 2820 0002 60B1     		cbz	r0, .L267
 2821 0004 0446     		mov	r4, r0
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2822              		.loc 1 1884 0
 2823 0006 99B9     		cbnz	r1, .L260
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2824              		.loc 1 1884 0 is_stmt 0 discriminator 2
 2825 0008 036C     		ldr	r3, [r0, #64]
 2826 000a 8BB1     		cbz	r3, .L260
 2827              	.LBB194:
 2828              	.LBB195:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2829              		.loc 2 195 0 is_stmt 1
 2830              		.syntax unified
 2831              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2832 000c 4FF05003 			mov r3, #80												
 2833 0010 83F31188 		msr basepri, r3											
 2834 0014 BFF36F8F 		isb														
 2835 0018 BFF34F8F 		dsb														
 2836              	
 2837              	@ 0 "" 2
 2838              	.LVL297:
 2839              		.thumb
 2840              		.syntax unified
 2841              	.L261:
 2842 001c FEE7     		b	.L261
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 102


 2843              	.L267:
 2844              	.LBE195:
 2845              	.LBE194:
 2846              	.LBB196:
 2847              	.LBB197:
 2848              		.syntax unified
 2849              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2850 001e 4FF05003 			mov r3, #80												
 2851 0022 83F31188 		msr basepri, r3											
 2852 0026 BFF36F8F 		isb														
 2853 002a BFF34F8F 		dsb														
 2854              	
 2855              	@ 0 "" 2
 2856              	.LVL298:
 2857              		.thumb
 2858              		.syntax unified
 2859              	.L259:
 2860 002e FEE7     		b	.L259
 2861              	.L260:
 2862              	.LBE197:
 2863              	.LBE196:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2864              		.loc 1 1885 0
 2865 0030 236C     		ldr	r3, [r4, #64]
 2866 0032 43B9     		cbnz	r3, .L262
 2867              	.LBB198:
 2868              	.LBB199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2869              		.loc 2 195 0
 2870              		.syntax unified
 2871              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2872 0034 4FF05003 			mov r3, #80												
 2873 0038 83F31188 		msr basepri, r3											
 2874 003c BFF36F8F 		isb														
 2875 0040 BFF34F8F 		dsb														
 2876              	
 2877              	@ 0 "" 2
 2878              	.LVL299:
 2879              		.thumb
 2880              		.syntax unified
 2881              	.L263:
 2882 0044 FEE7     		b	.L263
 2883              	.L262:
 2884 0046 0D46     		mov	r5, r1
 2885              	.LBE199:
 2886              	.LBE198:
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2887              		.loc 1 1901 0
 2888 0048 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2889              	.LVL300:
 2890              	.LBB200:
 2891              	.LBB201:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2892              		.loc 2 211 0
 2893              		.syntax unified
 2894              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2895 004c EFF31186 			mrs r6, basepri											
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 103


 2896 0050 4FF05003 		mov r3, #80												
 2897 0054 83F31188 		msr basepri, r3											
 2898 0058 BFF36F8F 		isb														
 2899 005c BFF34F8F 		dsb														
 2900              	
 2901              	@ 0 "" 2
 2902              		.thumb
 2903              		.syntax unified
 2904              	.LBE201:
 2905              	.LBE200:
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2906              		.loc 1 1906 0
 2907 0060 A36B     		ldr	r3, [r4, #56]
 2908 0062 4BB1     		cbz	r3, .L265
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2909              		.loc 1 1912 0
 2910 0064 E768     		ldr	r7, [r4, #12]
 2911              	.LVL301:
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2912              		.loc 1 1913 0
 2913 0066 2946     		mov	r1, r5
 2914 0068 2046     		mov	r0, r4
 2915 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 2916              	.LVL302:
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2917              		.loc 1 1914 0
 2918 006e E760     		str	r7, [r4, #12]
 2919              	.LVL303:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2920              		.loc 1 1916 0
 2921 0070 0120     		movs	r0, #1
 2922              	.LVL304:
 2923              	.L264:
 2924              	.LBB202:
 2925              	.LBB203:
 2926              		.loc 2 229 0
 2927              		.syntax unified
 2928              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2929 0072 86F31188 			msr basepri, r6	
 2930              	@ 0 "" 2
 2931              	.LVL305:
 2932              		.thumb
 2933              		.syntax unified
 2934              	.LBE203:
 2935              	.LBE202:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2936              		.loc 1 1927 0
 2937 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2938              	.LVL306:
 2939              	.L265:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2940              		.loc 1 1920 0
 2941 0078 0020     		movs	r0, #0
 2942 007a FAE7     		b	.L264
 2943              		.cfi_endproc
 2944              	.LFE17:
 2946              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 104


 2947              		.align	1
 2948              		.global	uxQueueMessagesWaiting
 2949              		.syntax unified
 2950              		.thumb
 2951              		.thumb_func
 2952              		.fpu fpv4-sp-d16
 2954              	uxQueueMessagesWaiting:
 2955              	.LFB18:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2956              		.loc 1 1931 0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 0
 2959              		@ frame_needed = 0, uses_anonymous_args = 0
 2960              	.LVL307:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2961              		.loc 1 1934 0
 2962 0000 40B9     		cbnz	r0, .L269
 2963              	.LBB204:
 2964              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2965              		.loc 2 195 0
 2966              		.syntax unified
 2967              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2968 0002 4FF05003 			mov r3, #80												
 2969 0006 83F31188 		msr basepri, r3											
 2970 000a BFF36F8F 		isb														
 2971 000e BFF34F8F 		dsb														
 2972              	
 2973              	@ 0 "" 2
 2974              	.LVL308:
 2975              		.thumb
 2976              		.syntax unified
 2977              	.L270:
 2978 0012 FEE7     		b	.L270
 2979              	.L269:
 2980              	.LBE205:
 2981              	.LBE204:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2982              		.loc 1 1931 0
 2983 0014 10B5     		push	{r4, lr}
 2984              	.LCFI38:
 2985              		.cfi_def_cfa_offset 8
 2986              		.cfi_offset 4, -8
 2987              		.cfi_offset 14, -4
 2988 0016 0446     		mov	r4, r0
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2989              		.loc 1 1936 0
 2990 0018 FFF7FEFF 		bl	vPortEnterCritical
 2991              	.LVL309:
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2992              		.loc 1 1938 0
 2993 001c A46B     		ldr	r4, [r4, #56]
 2994              	.LVL310:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2995              		.loc 1 1940 0
 2996 001e FFF7FEFF 		bl	vPortExitCritical
 2997              	.LVL311:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 105


1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2998              		.loc 1 1943 0
 2999 0022 2046     		mov	r0, r4
 3000 0024 10BD     		pop	{r4, pc}
 3001              		.cfi_endproc
 3002              	.LFE18:
 3004              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3005              		.align	1
 3006              		.global	uxQueueSpacesAvailable
 3007              		.syntax unified
 3008              		.thumb
 3009              		.thumb_func
 3010              		.fpu fpv4-sp-d16
 3012              	uxQueueSpacesAvailable:
 3013              	.LFB19:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3014              		.loc 1 1947 0
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 0
 3017              		@ frame_needed = 0, uses_anonymous_args = 0
 3018              	.LVL312:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3019              		.loc 1 1951 0
 3020 0000 40B9     		cbnz	r0, .L274
 3021              	.LBB206:
 3022              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3023              		.loc 2 195 0
 3024              		.syntax unified
 3025              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3026 0002 4FF05003 			mov r3, #80												
 3027 0006 83F31188 		msr basepri, r3											
 3028 000a BFF36F8F 		isb														
 3029 000e BFF34F8F 		dsb														
 3030              	
 3031              	@ 0 "" 2
 3032              	.LVL313:
 3033              		.thumb
 3034              		.syntax unified
 3035              	.L275:
 3036 0012 FEE7     		b	.L275
 3037              	.L274:
 3038              	.LBE207:
 3039              	.LBE206:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3040              		.loc 1 1947 0
 3041 0014 10B5     		push	{r4, lr}
 3042              	.LCFI39:
 3043              		.cfi_def_cfa_offset 8
 3044              		.cfi_offset 4, -8
 3045              		.cfi_offset 14, -4
 3046 0016 0446     		mov	r4, r0
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3047              		.loc 1 1953 0
 3048 0018 FFF7FEFF 		bl	vPortEnterCritical
 3049              	.LVL314:
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 106


 3050              		.loc 1 1955 0
 3051 001c E36B     		ldr	r3, [r4, #60]
 3052 001e A46B     		ldr	r4, [r4, #56]
 3053              	.LVL315:
 3054 0020 1C1B     		subs	r4, r3, r4
 3055              	.LVL316:
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3056              		.loc 1 1957 0
 3057 0022 FFF7FEFF 		bl	vPortExitCritical
 3058              	.LVL317:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3059              		.loc 1 1960 0
 3060 0026 2046     		mov	r0, r4
 3061 0028 10BD     		pop	{r4, pc}
 3062              		.cfi_endproc
 3063              	.LFE19:
 3065              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3066              		.align	1
 3067              		.global	uxQueueMessagesWaitingFromISR
 3068              		.syntax unified
 3069              		.thumb
 3070              		.thumb_func
 3071              		.fpu fpv4-sp-d16
 3073              	uxQueueMessagesWaitingFromISR:
 3074              	.LFB20:
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3075              		.loc 1 1964 0
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 0
 3078              		@ frame_needed = 0, uses_anonymous_args = 0
 3079              		@ link register save eliminated.
 3080              	.LVL318:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3081              		.loc 1 1968 0
 3082 0000 08B1     		cbz	r0, .L281
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3083              		.loc 1 1969 0
 3084 0002 806B     		ldr	r0, [r0, #56]
 3085              	.LVL319:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3086              		.loc 1 1972 0
 3087 0004 7047     		bx	lr
 3088              	.LVL320:
 3089              	.L281:
 3090              	.LBB208:
 3091              	.LBB209:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3092              		.loc 2 195 0
 3093              		.syntax unified
 3094              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3095 0006 4FF05003 			mov r3, #80												
 3096 000a 83F31188 		msr basepri, r3											
 3097 000e BFF36F8F 		isb														
 3098 0012 BFF34F8F 		dsb														
 3099              	
 3100              	@ 0 "" 2
 3101              	.LVL321:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 107


 3102              		.thumb
 3103              		.syntax unified
 3104              	.L280:
 3105 0016 FEE7     		b	.L280
 3106              	.LBE209:
 3107              	.LBE208:
 3108              		.cfi_endproc
 3109              	.LFE20:
 3111              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3112              		.align	1
 3113              		.global	xQueueIsQueueEmptyFromISR
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3117              		.fpu fpv4-sp-d16
 3119              	xQueueIsQueueEmptyFromISR:
 3120              	.LFB27:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3121              		.loc 1 2313 0
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 0
 3124              		@ frame_needed = 0, uses_anonymous_args = 0
 3125              		@ link register save eliminated.
 3126              	.LVL322:
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3127              		.loc 1 2317 0
 3128 0000 18B1     		cbz	r0, .L287
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3129              		.loc 1 2318 0
 3130 0002 836B     		ldr	r3, [r0, #56]
 3131 0004 53B9     		cbnz	r3, .L286
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3132              		.loc 1 2320 0
 3133 0006 0120     		movs	r0, #1
 3134              	.LVL323:
 3135 0008 7047     		bx	lr
 3136              	.LVL324:
 3137              	.L287:
 3138              	.LBB210:
 3139              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3140              		.loc 2 195 0
 3141              		.syntax unified
 3142              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3143 000a 4FF05003 			mov r3, #80												
 3144 000e 83F31188 		msr basepri, r3											
 3145 0012 BFF36F8F 		isb														
 3146 0016 BFF34F8F 		dsb														
 3147              	
 3148              	@ 0 "" 2
 3149              	.LVL325:
 3150              		.thumb
 3151              		.syntax unified
 3152              	.L284:
 3153 001a FEE7     		b	.L284
 3154              	.L286:
 3155              	.LBE211:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 108


 3156              	.LBE210:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3157              		.loc 1 2324 0
 3158 001c 0020     		movs	r0, #0
 3159              	.LVL326:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3160              		.loc 1 2328 0
 3161 001e 7047     		bx	lr
 3162              		.cfi_endproc
 3163              	.LFE27:
 3165              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3166              		.align	1
 3167              		.global	xQueueIsQueueFullFromISR
 3168              		.syntax unified
 3169              		.thumb
 3170              		.thumb_func
 3171              		.fpu fpv4-sp-d16
 3173              	xQueueIsQueueFullFromISR:
 3174              	.LFB29:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3175              		.loc 1 2353 0
 3176              		.cfi_startproc
 3177              		@ args = 0, pretend = 0, frame = 0
 3178              		@ frame_needed = 0, uses_anonymous_args = 0
 3179              		@ link register save eliminated.
 3180              	.LVL327:
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3181              		.loc 1 2357 0
 3182 0000 28B1     		cbz	r0, .L293
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3183              		.loc 1 2358 0
 3184 0002 826B     		ldr	r2, [r0, #56]
 3185 0004 C36B     		ldr	r3, [r0, #60]
 3186 0006 9A42     		cmp	r2, r3
 3187 0008 0AD1     		bne	.L292
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3188              		.loc 1 2360 0
 3189 000a 0120     		movs	r0, #1
 3190              	.LVL328:
 3191 000c 7047     		bx	lr
 3192              	.LVL329:
 3193              	.L293:
 3194              	.LBB212:
 3195              	.LBB213:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3196              		.loc 2 195 0
 3197              		.syntax unified
 3198              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3199 000e 4FF05003 			mov r3, #80												
 3200 0012 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 109


 3201 0016 BFF36F8F 		isb														
 3202 001a BFF34F8F 		dsb														
 3203              	
 3204              	@ 0 "" 2
 3205              	.LVL330:
 3206              		.thumb
 3207              		.syntax unified
 3208              	.L290:
 3209 001e FEE7     		b	.L290
 3210              	.L292:
 3211              	.LBE213:
 3212              	.LBE212:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3213              		.loc 1 2364 0
 3214 0020 0020     		movs	r0, #0
 3215              	.LVL331:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3216              		.loc 1 2368 0
 3217 0022 7047     		bx	lr
 3218              		.cfi_endproc
 3219              	.LFE29:
 3221              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3222              		.align	1
 3223              		.global	vQueueAddToRegistry
 3224              		.syntax unified
 3225              		.thumb
 3226              		.thumb_func
 3227              		.fpu fpv4-sp-d16
 3229              	vQueueAddToRegistry:
 3230              	.LFB30:
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 110


2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 111


2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 112


2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 113


2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 114


2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3231              		.loc 1 2649 0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 0
 3234              		@ frame_needed = 0, uses_anonymous_args = 0
 3235              		@ link register save eliminated.
 3236              	.LVL332:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3237              		.loc 1 2654 0
 3238 0000 0023     		movs	r3, #0
 3239              	.LVL333:
 3240              	.L295:
 3241              		.loc 1 2654 0 is_stmt 0 discriminator 1
 3242 0002 072B     		cmp	r3, #7
 3243 0004 0CD8     		bhi	.L299
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3244              		.loc 1 2656 0 is_stmt 1
 3245 0006 074A     		ldr	r2, .L301
 3246 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3247 000c 0AB1     		cbz	r2, .L300
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 115


 3248              		.loc 1 2654 0 discriminator 2
 3249 000e 0133     		adds	r3, r3, #1
 3250              	.LVL334:
 3251 0010 F7E7     		b	.L295
 3252              	.L300:
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3253              		.loc 1 2659 0
 3254 0012 044A     		ldr	r2, .L301
 3255 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3256              		.loc 1 2660 0
 3257 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3258              	.LVL335:
 3259 001c 5860     		str	r0, [r3, #4]
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3260              		.loc 1 2663 0
 3261 001e 7047     		bx	lr
 3262              	.LVL336:
 3263              	.L299:
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3264              		.loc 1 2670 0
 3265 0020 7047     		bx	lr
 3266              	.L302:
 3267 0022 00BF     		.align	2
 3268              	.L301:
 3269 0024 00000000 		.word	xQueueRegistry
 3270              		.cfi_endproc
 3271              	.LFE30:
 3273              		.section	.text.pcQueueGetName,"ax",%progbits
 3274              		.align	1
 3275              		.global	pcQueueGetName
 3276              		.syntax unified
 3277              		.thumb
 3278              		.thumb_func
 3279              		.fpu fpv4-sp-d16
 3281              	pcQueueGetName:
 3282              	.LFB31:
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3283              		.loc 1 2678 0
 3284              		.cfi_startproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 116


 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287              		@ link register save eliminated.
 3288              	.LVL337:
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3289              		.loc 1 2684 0
 3290 0000 0023     		movs	r3, #0
 3291              	.LVL338:
 3292              	.L304:
 3293              		.loc 1 2684 0 is_stmt 0 discriminator 1
 3294 0002 072B     		cmp	r3, #7
 3295 0004 0BD8     		bhi	.L308
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3296              		.loc 1 2686 0 is_stmt 1
 3297 0006 074A     		ldr	r2, .L310
 3298 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3299 000c 5268     		ldr	r2, [r2, #4]
 3300 000e 8242     		cmp	r2, r0
 3301 0010 01D0     		beq	.L309
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3302              		.loc 1 2684 0 discriminator 2
 3303 0012 0133     		adds	r3, r3, #1
 3304              	.LVL339:
 3305 0014 F5E7     		b	.L304
 3306              	.L309:
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3307              		.loc 1 2688 0
 3308 0016 034A     		ldr	r2, .L310
 3309 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3310              	.LVL340:
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3311              		.loc 1 2689 0
 3312 001c 7047     		bx	lr
 3313              	.LVL341:
 3314              	.L308:
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3315              		.loc 1 2680 0
 3316 001e 0020     		movs	r0, #0
 3317              	.LVL342:
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3318              		.loc 1 2698 0
 3319 0020 7047     		bx	lr
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 117


 3320              	.L311:
 3321 0022 00BF     		.align	2
 3322              	.L310:
 3323 0024 00000000 		.word	xQueueRegistry
 3324              		.cfi_endproc
 3325              	.LFE31:
 3327              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3328              		.align	1
 3329              		.global	vQueueUnregisterQueue
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	vQueueUnregisterQueue:
 3336              	.LFB32:
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3337              		.loc 1 2706 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
 3342              	.LVL343:
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3343              		.loc 1 2711 0
 3344 0000 0023     		movs	r3, #0
 3345              	.LVL344:
 3346              	.L313:
 3347              		.loc 1 2711 0 is_stmt 0 discriminator 1
 3348 0002 072B     		cmp	r3, #7
 3349 0004 0FD8     		bhi	.L317
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3350              		.loc 1 2713 0 is_stmt 1
 3351 0006 084A     		ldr	r2, .L319
 3352 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3353 000c 5268     		ldr	r2, [r2, #4]
 3354 000e 8242     		cmp	r2, r0
 3355 0010 01D0     		beq	.L318
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3356              		.loc 1 2711 0 discriminator 2
 3357 0012 0133     		adds	r3, r3, #1
 3358              	.LVL345:
 3359 0014 F5E7     		b	.L313
 3360              	.L318:
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 118


2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3361              		.loc 1 2716 0
 3362 0016 044A     		ldr	r2, .L319
 3363 0018 0021     		movs	r1, #0
 3364 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3365              		.loc 1 2721 0
 3366 001e 02EBC303 		add	r3, r2, r3, lsl #3
 3367              	.LVL346:
 3368 0022 5960     		str	r1, [r3, #4]
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3369              		.loc 1 2722 0
 3370 0024 7047     		bx	lr
 3371              	.LVL347:
 3372              	.L317:
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3373              		.loc 1 2730 0
 3374 0026 7047     		bx	lr
 3375              	.L320:
 3376              		.align	2
 3377              	.L319:
 3378 0028 00000000 		.word	xQueueRegistry
 3379              		.cfi_endproc
 3380              	.LFE32:
 3382              		.section	.text.vQueueDelete,"ax",%progbits
 3383              		.align	1
 3384              		.global	vQueueDelete
 3385              		.syntax unified
 3386              		.thumb
 3387              		.thumb_func
 3388              		.fpu fpv4-sp-d16
 3390              	vQueueDelete:
 3391              	.LFB21:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3392              		.loc 1 1976 0
 3393              		.cfi_startproc
 3394              		@ args = 0, pretend = 0, frame = 0
 3395              		@ frame_needed = 0, uses_anonymous_args = 0
 3396              	.LVL348:
 3397 0000 08B5     		push	{r3, lr}
 3398              	.LCFI40:
 3399              		.cfi_def_cfa_offset 8
 3400              		.cfi_offset 3, -8
 3401              		.cfi_offset 14, -4
 3402              	.LVL349:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 119


 3403              		.loc 1 1979 0
 3404 0002 40B9     		cbnz	r0, .L322
 3405              	.LBB214:
 3406              	.LBB215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3407              		.loc 2 195 0
 3408              		.syntax unified
 3409              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3410 0004 4FF05003 			mov r3, #80												
 3411 0008 83F31188 		msr basepri, r3											
 3412 000c BFF36F8F 		isb														
 3413 0010 BFF34F8F 		dsb														
 3414              	
 3415              	@ 0 "" 2
 3416              	.LVL350:
 3417              		.thumb
 3418              		.syntax unified
 3419              	.L323:
 3420 0014 FEE7     		b	.L323
 3421              	.L322:
 3422              	.LBE215:
 3423              	.LBE214:
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3424              		.loc 1 1984 0
 3425 0016 FFF7FEFF 		bl	vQueueUnregisterQueue
 3426              	.LVL351:
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3427              		.loc 1 2014 0
 3428 001a 08BD     		pop	{r3, pc}
 3429              		.cfi_endproc
 3430              	.LFE21:
 3432              		.comm	xQueueRegistry,64,4
 3433              		.text
 3434              	.Letext0:
 3435              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3436              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3437              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3438              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3439              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3440              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3441              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3442              		.file 10 "Inc/FreeRTOSConfig.h"
 3443              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 3444              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3445              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3446              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3447              		.file 15 "<built-in>"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 120


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:18     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:24     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:54     .text.prvIsQueueFull:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:60     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:101    .text.prvIsQueueEmpty:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:107    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:146    .text.prvCopyDataToQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:152    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:271    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:277    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:326    .text.prvUnlockQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:332    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:438    .text.xQueueGenericReset:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:445    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:554    .text.xQueueGenericReset:00000080 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:559    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:565    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:607    .text.xQueueGenericCreateStatic:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:614    .text.xQueueGenericCreateStatic:00000000 xQueueGenericCreateStatic
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:774    .text.xQueueGenericSend:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:781    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1105   .text.xQueueGenericSend:00000178 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1110   .text.prvInitialiseMutex:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1116   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1156   .text.xQueueCreateMutexStatic:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1163   .text.xQueueCreateMutexStatic:00000000 xQueueCreateMutexStatic
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1205   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1212   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1412   .text.xQueueGiveFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1419   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1627   .text.xQueueReceive:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1634   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1931   .text.xQueueReceive:00000154 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1936   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:1943   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2302   .text.xQueueSemaphoreTake:00000198 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2307   .text.xQueuePeek:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2314   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2612   .text.xQueuePeek:00000154 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2617   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2624   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2795   .text.xQueuePeekFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2802   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2947   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:2954   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3005   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3012   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3066   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3073   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3112   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3119   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3166   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3173   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3222   .text.vQueueAddToRegistry:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3229   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s 			page 121


C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3269   .text.vQueueAddToRegistry:00000024 $d
                            *COM*:00000040 xQueueRegistry
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3274   .text.pcQueueGetName:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3281   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3323   .text.pcQueueGetName:00000024 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3328   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3335   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3378   .text.vQueueUnregisterQueue:00000028 $d
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3383   .text.vQueueDelete:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccTJoZEh.s:3390   .text.vQueueDelete:00000000 vQueueDelete

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vListInitialise
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
